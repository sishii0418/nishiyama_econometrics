[["index.html", "西山ほか(2019)『計量経済学』有斐閣の練習問題解答とRでの再現 はじめに 方針 似たようなサイト", " 西山ほか(2019)『計量経済学』有斐閣の練習問題解答とRでの再現 石井 俊輔 2024-05-03 はじめに 西山ほか(2019)『計量経済学』有斐閣 (出版社リンク) の練習問題解答とRでの再現です. 必要なRパッケージをインストール: install.packages(&quot;tidyverse&quot;) install.packages(&quot;openxlsx&quot;) install.packages(&quot;haven&quot;) install.packages(&quot;wooldridge&quot;) install.packages(&quot;fixest&quot;) install.packages(&quot;car&quot;) install.packages(&quot;knitr&quot;) install.packages(&quot;modelsummary&quot;) install.packages(&quot;estimatr&quot;) 方針 不均一分散に頑健な回帰分析はestimatr::lm_robust()を使っています. 固定効果モデル(第6章)はestimatr::lm_robust()に加え処理が高速とされるfixest::feols()を併用し比較検討しています. 回帰結果の表はmodelsummary, その他の表はgtなどを使い, 容易にHTML, \\(\\rm\\LaTeX\\)間で変換ができるようにしています (レポートなどでの利用を想定). tidyverseを使い, 図はggplot2で出力しています. 似たようなサイト 公式の解答はないようですが, ほかに似たようなサイトとして以下があります (ほかにもご存知でしたらご教授ください). 北川梨津 (2020) 『西山 他『計量経済学』のためのR』(https://ritsu1997.github.io/r-for-nlas-econometrics/)1. @kpd0605(ビル・エヴァンス ギャンビット) (2024) 『『計量経済学』（有斐閣）実践問題解答例（順次追加）』(https://qiita.com/kpd0605/items/28ca24fe8b192612e67c). 勝手ながら, だいぶ参考にさせていただきました.↩︎ "],["ch2.html", "第2章 データの整理と確率変数の基礎 練習問題 2-1 [確認] 練習問題 2-2 [確認] 練習問題 2-3 [確認] 練習問題 2-4 [確認] 練習問題 2-5 [確認]", " 第2章 データの整理と確率変数の基礎 先に出版社サイトよりデータをダウンロードする. # サポートファイルへのリンク curl &lt;- &quot;https://www.yuhikaku.co.jp/static_files/05385_support02.zip&quot; # ダウンロード保存用フォルダが存在しない場合, 作成 if(!dir.exists(&quot;downloads&quot;)){ dir.create(&quot;downloads&quot;) } cdestfile &lt;- &quot;downloads/support02.zip&quot; download.file(curl, cdestfile) # データ保存用フォルダが存在しない場合, 作成 if(!dir.exists(&quot;data&quot;)){ dir.create(&quot;data&quot;) } # WSL上のRで解凍すると文字化けするので、Linuxのコマンドを外部呼び出し # Windowsの場合は別途コマンドを用いる. if(.Platform$OS.type == &quot;unix&quot;) { system(sprintf(&#39;unzip -n -Ocp932 %s -d %s&#39;, &quot;downloads/support02.zip&quot;, &quot;./data&quot;)) } else { print(&quot;Windowsで解凍するコマンドを別途追加せよ.&quot;) } 必要なライブラリを読み込む. library(tidyverse) ## ── Attaching core tidyverse packages ──────────────────── tidyverse 2.0.0 ── ## ✔ dplyr 1.1.4 ✔ readr 2.1.5 ## ✔ forcats 1.0.0 ✔ stringr 1.5.1 ## ✔ ggplot2 3.5.0 ✔ tibble 3.2.1 ## ✔ lubridate 1.9.3 ✔ tidyr 1.3.1 ## ✔ purrr 1.0.2 ## ── Conflicts ────────────────────────────────────── tidyverse_conflicts() ── ## ✖ dplyr::filter() masks stats::filter() ## ✖ dplyr::lag() masks stats::lag() ## ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors 練習問題 2-1 [確認] R には最頻値を求める関数がないようなので, 別途関数Mode()を定義する. data21 &lt;- read.table(&quot;data/02_第2章/02_practice_01.csv&quot;) mean(data21$V1) ## [1] 10 var(data21$V1) ## [1] 18.10526 median(data21$V1) ## [1] 10 Mode &lt;- function(x) { ux &lt;- unique(x) tab &lt;- tabulate(match(x, ux)) ux[tab == max(tab)] } Mode(data21$V1) ## [1] 10 練習問題 2-2 [確認] 与式1行目については \\[ \\begin{aligned} LHS_1 &amp;= \\frac{1}{N}\\sum_{i=1}^N (x_i-\\bar{x})^2 = \\frac{1}{N}\\sum_{i=1}^N (x_i^2 - 2x_i\\bar{x}+\\bar{x}^2) \\\\ &amp;= \\frac{1}{N}\\left[\\sum_{i=1}^N (x_i^2-x_i\\bar{x})-\\left(\\bar{x}\\sum_{i=1}^N x_i-N\\bar{x}^2\\right)\\right] \\\\ &amp;= \\frac{1}{N}\\left[\\sum_{i=1}^N (x_i^2-x_i\\bar{x})-\\left(\\bar{x}\\cdot N\\bar{x}-N\\bar{x}^2\\right)\\right] \\\\ &amp;= \\frac{1}{N}\\sum_{i=1}^N (x_i^2-x_i\\bar{x}) = \\frac{1}{N}\\sum_{i=1}^N (x_i-\\bar{x})x_i = MHS \\\\ &amp;= \\frac{1}{N}\\sum_{i=1}^N x_i^2 - \\frac{1}{N}\\bar{x}\\sum_{i=1}^N x_i \\\\ &amp;= \\frac{1}{N}\\sum_{i=1}^N x_i^2 - \\frac{1}{N}\\bar{x}\\cdot N\\bar{x} \\\\ &amp;= \\frac{1}{N}\\sum_{i=1}^N x_i^2 - \\bar{x}^2 = RHS_1. \\end{aligned} \\] 与式2, 3行目については \\[ \\begin{aligned} LHS_2 &amp;= \\frac{1}{N}\\sum_{i=1}^N (x_i-\\bar{x})(y_i - \\bar{y}) = \\frac{1}{N}\\sum_{i=1}^N (x_iy_i - x_i\\bar{y} - \\bar{x}y_i + \\bar{x}\\bar{y}) \\\\ &amp;= \\frac{1}{N}\\left[\\sum_{i=1}^N (x_iy_i - \\bar{x}y_i) - \\sum_{i=1}^N (x_i\\bar{y} - \\bar{x}\\bar{y})\\right] \\\\ &amp;= \\frac{1}{N}\\left[\\sum_{i=1}^N (x_iy_i - \\bar{x}y_i) - (N\\bar{x}\\bar{y} - N\\bar{x}{y})\\right] \\\\ &amp;= \\frac{1}{N}\\sum_{i=1}^N (x_i-\\bar{x})y_i = MHS_2 \\\\ &amp;= \\frac{1}{N}\\sum_{i=1}^N (x_iy_i) - \\frac{1}{N}\\bar{x}\\sum_{i=1}^N y_i \\\\ &amp;= \\frac{1}{N}\\sum_{i=1}^N x_iy_i - \\frac{1}{N}\\bar{x}\\cdot N\\bar{y} \\\\ &amp;= \\frac{1}{N}\\sum_{i=1}^N x_iy_i - \\bar{x}\\bar{y} = RHS_3. \\end{aligned} \\] \\(MHS_2 = RHS_2\\)は\\(LHS_2 = MHS_2\\)と\\(x\\)と\\(y\\)との対称性から求められるので, 省略. QED 練習問題 2-3 [確認] data23 &lt;- read.table(&quot;data/02_第2章/02_practice_03.csv&quot;, sep=&quot;,&quot;) x &lt;- data23$V1 y &lt;- data23$V2 data23 %&gt;% ggplot(aes(x = x, y = y)) + geom_point() cov(x, y) ## [1] 2.111111 cor(x, y) ## [1] 0.7680295 練習問題 2-4 [確認] 任意の\\(t\\)に対して \\[ \\begin{aligned} \\Var(tX+Y) &amp;= t^2\\Var(X) + 2t\\Cov(X, Y) + \\Var(Y) \\\\ &amp;= s_x^2t^2 + 2s_{xy}t + s_y^2 \\geq 0 \\end{aligned} \\] だから, これを\\(t\\)に関する2次関数と見ると, 判別式は \\[ D = s_{xy}^2 - s_x^2s_y^2 \\leq 0 \\] を満たす. これより, \\(0 \\leq s_{xy}^2 \\leq s_x^2s_y^2\\)であるから, \\[ |s_{xy}| \\leq s_xs_y. \\] よって, \\[ \\frac{|s_{xy}|}{s_xs_y} = \\left|\\frac{s_{xy}}{s_xs_y}\\right| = |r_{xy}| \\leq 1 \\] i.e., \\(-1 \\leq r_{xy} \\leq 1\\). QED 別解 2つのベクトル\\(\\mathbb{x} = (x_1, \\cdots, x_n), \\mathbb{y} = (y_1, \\cdots, y_n)\\)を考える. それぞれの値を平均値で引いたものを \\(\\mathbb{x}_c = (x_1 - \\bar{x}, \\cdots, x_n - \\bar{x}), \\mathbb{y}_c = (y_1 - \\bar{y}, \\cdots, y_n - \\bar{y})\\)とすると, 相関係数\\(r_{xy}\\)は \\[ \\begin{aligned} r_{xy} &amp;= \\frac{s_{xy}}{s_xs_y} \\\\ &amp;= \\frac{\\sum_{i=1}^n (x_i - \\bar{x})(y_i - \\bar{y})}{\\sqrt{\\sum_{i=1}^n (x_i - \\bar{x})^2}\\sqrt{\\sum_{i=1}^n (y_i - \\bar{y})^2}} \\\\ &amp;= \\frac{\\mathbb{x}_c\\cdot\\mathbb{y}_c}{|\\mathbb{x}_c||\\mathbb{y}_c|} \\\\ &amp;= \\cos\\theta &amp; \\text{ただし, $\\theta$は$\\mathbb{x}_c$と$\\mathbb{y}_c$のなす角} \\end{aligned} \\] と表せるから, \\(-1 \\leq \\cos\\theta = r_{xy} \\leq 1\\)である. QED 練習問題 2-5 [確認] それぞれ \\[ \\begin{aligned} \\E(X) &amp;= \\sum_x x\\P(X=x) = 1\\cdot\\frac{1}{5} + 5\\cdot\\frac{1}{4} + 6\\cdot\\frac{3}{10} + 7\\cdot\\frac{1}{4} = 5. \\\\ \\E(X^2) &amp;= \\sum_x x^2\\P(X=x) = 1^2\\cdot\\frac{1}{5} + 5^2\\cdot\\frac{1}{4} + 6^2\\cdot\\frac{3}{10} + 7^2\\cdot\\frac{1}{4} = 29.5. \\\\ \\Var(X) &amp;= \\E(X^2) - [\\E(X)]^2 = 4.5. \\end{aligned} \\] 累積分布関数はggplot2::stat_ecdf()を用いて描画できる. データは先に指定された確率通りに生成しておく. data &lt;- tibble(x = c(rep (1, 8), rep(5, 10), rep(6, 12), rep(7, 10))) data %&gt;% ggplot(aes(x = x)) + stat_ecdf() "],["ch3.html", "第3章 統計理論の基礎 練習問題 3-2 [確認]", " 第3章 統計理論の基礎 第3章では第2章と同じデータを使うため、新たなダウンロードは不要. なお出版社サイトにある第3章のファイルは, 練習問題2-1のデータを用いるところが, 誤って練習問題2-3と同じデータが格納されている. 必要なライブラリを読み込む. library(tidyverse) 練習問題 3-2 [確認] 第2章練習問題2-1で用いたデータを読み込み、両側t検定を実行する. \\(\\alpha=0.10\\)の場合90%信頼区間は\\([8.354811, 11.645189]\\)となり, これは8を含まないことから帰無仮説は棄却できる. 一方で\\(\\alpha=0.01\\)のとき、99%信頼区間は\\([7.277955, 12.722045]\\)となり8を含むことから, 帰無仮説は棄却されない. data32 &lt;- read.csv(&quot;data/02_第2章/02_practice_01.csv&quot;, header = FALSE) x &lt;- data32$V1 t.test(x, alternative = &quot;two.sided&quot;, mu = 8, conf.level = 0.90) ## ## One Sample t-test ## ## data: x ## t = 2.102, df = 19, p-value = 0.04911 ## alternative hypothesis: true mean is not equal to 8 ## 90 percent confidence interval: ## 8.354811 11.645189 ## sample estimates: ## mean of x ## 10 t.test(x, alternative = &quot;two.sided&quot;, mu = 8, conf.level = 0.99) ## ## One Sample t-test ## ## data: x ## t = 2.102, df = 19, p-value = 0.04911 ## alternative hypothesis: true mean is not equal to 8 ## 99 percent confidence interval: ## 7.277955 12.722045 ## sample estimates: ## mean of x ## 10 "],["ch4.html", "第4章 線形単回帰モデルの推定と検定 実証例4.1 労働生産性と実質賃金の関係 図4-1 時間当たり実質賃金と労働生産性 練習問題 4-2 [実証] 練習問題 4-10 [実証]", " 第4章 線形単回帰モデルの推定と検定 先に出版社サイトよりデータをダウンロードする. # サポートファイルへのリンク curl &lt;- &quot;https://www.yuhikaku.co.jp/static_files/05385_support04.zip&quot; # ダウンロード保存用フォルダが存在しない場合, 作成 if(!dir.exists(&quot;downloads&quot;)){ dir.create(&quot;downloads&quot;) } cdestfile &lt;- &quot;downloads/support04.zip&quot; download.file(curl, cdestfile) # データ保存用フォルダが存在しない場合, 作成 if(!dir.exists(&quot;data&quot;)){ dir.create(&quot;data&quot;) } # WSL上のRで解凍すると文字化けするので、Linuxのコマンドを外部呼び出し # Windowsの場合は別途コマンドを用いる. if(.Platform$OS.type == &quot;unix&quot;) { system(sprintf(&#39;unzip -n -Ocp932 %s -d %s&#39;, &quot;downloads/support04.zip&quot;, &quot;./data&quot;)) } else { print(&quot;Windowsで解凍するコマンドを別途追加せよ.&quot;) } 必要なライブラリを読み込む. library(tidyverse) library(openxlsx) library(estimatr) 実証例4.1 労働生産性と実質賃金の関係 p.128の実証例ブロック内の\\(N=22\\)は\\(N=21\\)の誤植と思われる. ch04_wage &lt;- read.csv(&quot;data/04_第4章/ch04_wage.csv&quot;) ch04_wage_model &lt;- lm(wage ~ productivity, data = ch04_wage) summary(ch04_wage_model) ## ## Call: ## lm(formula = wage ~ productivity, data = ch04_wage) ## ## Residuals: ## Min 1Q Median 3Q Max ## -47.618 -17.612 4.186 21.946 37.052 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 276.12961 87.61057 3.152 0.00525 ** ## productivity 0.54682 0.02442 22.395 4.04e-15 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 25.77 on 19 degrees of freedom ## Multiple R-squared: 0.9635, Adjusted R-squared: 0.9616 ## F-statistic: 501.5 on 1 and 19 DF, p-value: 4.037e-15 Rのlm()で計算される標準誤差は不均一分散に対して頑健でない. 本文中にある不均一分散に対して頑健な計算結果を求めるには, estimatr::lm_robust()を用い, se_type = \"stata\"と指定する. ch04_wage_model_robust &lt;- lm_robust(wage ~ productivity, data = ch04_wage, se_type = &quot;stata&quot;) summary(ch04_wage_model_robust) ## ## Call: ## lm_robust(formula = wage ~ productivity, data = ch04_wage, se_type = &quot;stata&quot;) ## ## Standard error type: HC1 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower CI Upper DF ## (Intercept) 276.1296 71.25559 3.875 1.019e-03 126.990 425.2693 19 ## productivity 0.5468 0.02046 26.722 1.553e-16 0.504 0.5896 19 ## ## Multiple R-squared: 0.9635 , Adjusted R-squared: 0.9616 ## F-statistic: 714.1 on 1 and 19 DF, p-value: &lt; 2.2e-16 図4-1 時間当たり実質賃金と労働生産性 回帰曲線はgeom_smooth()で描画できる. ch04_wage %&gt;% ggplot(aes(x = productivity, y = wage)) + geom_point() + xlab(&quot;労働生産性 (円)&quot;) + ylab(&quot;実質賃金 (円)&quot;) + geom_smooth(method = &quot;lm&quot;, se = FALSE, color = &quot;black&quot;) ## `geom_smooth()` using formula = &#39;y ~ x&#39; 練習問題 4-2 [実証] データを読み込み, 回帰分析を実行する. Excelファイルの読み込みにはopenxlsx::read.xlsx()を用いる. 列名が日本語だと扱いづらいため, これを変更しておく. \\(gdp2013\\_ln = \\beta_0 + \\beta_1 pop2013\\_ln\\)というモデルを立てると, \\(\\hat{\\beta_0} = 7.623, \\hat{\\beta_1} = 1.075\\)と求められる. data42 &lt;- read.xlsx(&quot;data/04_第4章/data for chap 4 exercise 2.xlsx&quot;) colnames(data42) &lt;- c(&quot;pref&quot;, &quot;pop2013&quot;, &quot;gdp2013&quot;, &quot;pop2013_ln&quot;, &quot;gdp2013_ln&quot;) model42 &lt;- lm(gdp2013_ln ~ pop2013_ln, data = data42) model42 ## ## Call: ## lm(formula = gdp2013_ln ~ pop2013_ln, data = data42) ## ## Coefficients: ## (Intercept) pop2013_ln ## 7.623 1.075 帰無仮説\\(H_0\\): \\(\\beta_1 = 1\\)に関して, 統計量\\(t = \\frac{\\hat{\\beta_1} - \\beta_1}{\\text{SE}(\\hat{\\beta_1})} = 2.62773\\)が求められる. これは自由度\\(n-2 = 45\\)で, 有意水準5%のt検定の棄却域\\((\\infty, -2.014103]\\), \\([2.014103, \\infty)\\)に入っていることから帰無仮説は棄却される. beta1 &lt;- model42$coefficients[2] sebeta1 &lt;- summary(model42)$coefficients[2, 2] n &lt;- dim(data42)[1] t &lt;- (beta1 - 1)/sebeta1 t ## pop2013_ln ## 2.62773 qt(0.975, n-2) # 2.014103 ## [1] 2.014103 confint()関数を用いると直接求められる. confint(model42, &#39;(Intercept)&#39;, level=0.90) ## 5 % 95 % ## (Intercept) 7.257252 7.988132 人口が1%変化すると, GDPは\\(\\beta_1 = 1.075\\)%変化する. \\(\\text{Var}(u) = \\frac{\\sum_{i=1}^n \\hat{u}_i^2}{n-2} = 0.02245859\\)と求められる. ln(人口)の分散はvar()関数を用いると, 0.5964525と求められる. sum(model42$residuals^2)/(n-2) ## [1] 0.02245859 var_pop2013_ln &lt;- var(data42$pop2013_ln) var_pop2013_ln ## [1] 0.5964525 練習問題 4-10 [実証] データを読み込み, 回帰分析を実行することで\\(\\beta_1\\)を一致推定できるか調べる. 実際に計算すると, Cov\\((u_i, X_i) = 0\\)が成り立っていることが確認できる. data410 &lt;- read.xlsx(&quot;data/04_第4章/data for chap 4 exercise 10.xlsx&quot;) %&gt;% data.frame() model410 &lt;- lm(Y ~ X, data = data410) cov(model410$residuals, data410$X) ## [1] 4.392411e-18 E\\((u_i^2|X_i) = 0.690318 \\neq 0\\). 散布図を描くと, \\(\\hat{Y}_i\\)が大きくなるに従って残差の分散が大きくなっていることが確認できる. mean(model410$residuals^2) ## [1] 0.690318 model410 %&gt;% ggplot(aes(x = .fitted, y = .resid)) + geom_point() + geom_hline(yintercept = 0) 不均一分散に頑健な標準誤差はestimatr::lm_robust()を用いて求める. model410_robust &lt;- lm_robust(Y ~ X, data = data410) summary(model410_robust) ## ## Call: ## lm_robust(formula = Y ~ X, data = data410) ## ## Standard error type: HC2 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower CI Upper DF ## (Intercept) 0.8103 0.1583 5.119 4.803e-07 0.4991 1.122 398 ## X 1.2773 0.2158 5.918 7.035e-09 0.8530 1.702 398 ## ## Multiple R-squared: 0.05683 , Adjusted R-squared: 0.05446 ## F-statistic: 35.02 on 1 and 398 DF, p-value: 7.035e-09 summary()によると, \\(\\beta_1\\)の95%信頼区間に0.8は入っていないため, 帰無仮説は棄却されない. 不均一分散に頑健な標準誤差はestimatr::lm_robust()を用いて求める. confint(model410) ## 2.5 % 97.5 % ## (Intercept) 0.3912772 1.229412 ## X 0.7645056 1.790022 summary()によると, \\(\\beta_1\\)の95%信頼区間に0.8は入っており, 帰無仮説は棄却される. 分散が均一でないデータに均一分散を仮定した標準誤差を用いると, 上のように異なる結果が導かれることがある. "],["ch5.html", "第5章 重回帰モデルの推定と検定 単回帰 (5.1), (5.2) 実証例5.1 信頼と規範が経済成長に与える影響の重回帰分析 実証例5.2 FWL定理の確認 実証例5.3 FWL定理の別表現の確認 実証例5.4 信頼と規範が経済成長に与える影響の重回帰分析の標準誤差 実証例5.5 信頼と規範が経済成長に与える影響の多項式モデル 図5-1 散布図と推定された回帰曲線 例題5.5 実証例5.6 都市化の度合いと初期時点GDPの交互作用 実証例5.7 都市化の度合いと初期時点GDPのダミー変数同士の交互作用 実証例5.8 非線形モデルにおける結合仮説の検定 実証例5.9 ポンフェローニ検定 表5-5 記述統計量 表5-6 推定結果: 被説明変数は経済成長率 表5-7 推定結果 練習問題 5-14 [実証] 練習問題 5-15 [実証]", " 第5章 重回帰モデルの推定と検定 先に出版社サイトよりデータをダウンロードする. # サポートファイルへのリンク curl &lt;- &quot;https://www.yuhikaku.co.jp/static_files/05385_support05.zip&quot; # ダウンロード保存用フォルダが存在しない場合, 作成 if(!dir.exists(&quot;downloads&quot;)){ dir.create(&quot;downloads&quot;) } cdestfile &lt;- &quot;downloads/support05.zip&quot; download.file(curl, cdestfile) # データ保存用フォルダが存在しない場合, 作成 if(!dir.exists(&quot;data&quot;)){ dir.create(&quot;data&quot;) } # WSL上のRで解凍すると文字化けするので、Linuxのコマンドを外部呼び出し # Windowsの場合は別途コマンドを用いる. if(.Platform$OS.type == &quot;unix&quot;) { system(sprintf(&#39;unzip -n -Ocp932 %s -d %s&#39;, &quot;downloads/support05.zip&quot;, &quot;./data&quot;)) } else { print(&quot;Windowsで解凍するコマンドを別途追加せよ.&quot;) } 必要なライブラリを読み込む. library(tidyverse) library(estimatr) library(knitr) library(modelsummary) ## `modelsummary` 2.0.0 now uses `tinytable` as its default table-drawing ## backend. Learn more at: https://vincentarelbundock.github.io/tinytable/ ## ## Revert to `kableExtra` for one session: ## ## options(modelsummary_factory_default = &#39;kableExtra&#39;) ## ## Change the default backend persistently: ## ## config_modelsummary(factory_default = &#39;gt&#39;) ## ## Silence this message forever: ## ## config_modelsummary(startup_message = FALSE) library(gt) library(car) ## Loading required package: carData ## ## Attaching package: &#39;car&#39; ## The following object is masked from &#39;package:dplyr&#39;: ## ## recode ## The following object is masked from &#39;package:purrr&#39;: ## ## some library(wooldridge) library(haven) 単回帰 (5.1), (5.2) 先にデータを読み込み, 変数を作成する. 不均一分散に頑健な標準誤差を求めるために, estimatr::lm_robust()を使う. youdou &lt;- read.csv(&quot;data/05_第5章/youdou.csv&quot;) youdou &lt;- youdou %&gt;% mutate(lny80 = log(y80)) %&gt;% mutate(lny99 = log(y99)) %&gt;% mutate(lny90 = log(y90)) %&gt;% mutate(growthrate8099 = (lny99-lny80)/19*100) %&gt;% mutate(growthrate8090 = (lny90-lny80)/10) youdou_51 &lt;- lm_robust(growthrate8099 ~ trust80, data = youdou, se_type = &quot;stata&quot;) summary(youdou_51) ## ## Call: ## lm_robust(formula = growthrate8099 ~ trust80, data = youdou, ## se_type = &quot;stata&quot;) ## ## Standard error type: HC1 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower CI Upper DF ## (Intercept) 3.1394 0.06044 51.943 8.188e-42 3.01763 3.2611 45 ## trust80 0.2247 0.06640 3.384 1.491e-03 0.09094 0.3584 45 ## ## Multiple R-squared: 0.179 , Adjusted R-squared: 0.1608 ## F-statistic: 11.45 on 1 and 45 DF, p-value: 0.001491 youdou_52 &lt;- lm_robust(growthrate8099 ~ norm80, data = youdou, se_type = &quot;stata&quot;) summary(youdou_52) ## ## Call: ## lm_robust(formula = growthrate8099 ~ norm80, data = youdou, se_type = &quot;stata&quot;) ## ## Standard error type: HC1 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower CI Upper DF ## (Intercept) 3.0905 0.04826 64.033 7.544e-46 2.9933 3.1878 45 ## norm80 0.5597 0.07058 7.931 4.348e-10 0.4176 0.7019 45 ## ## Multiple R-squared: 0.4563 , Adjusted R-squared: 0.4442 ## F-statistic: 62.9 on 1 and 45 DF, p-value: 4.348e-10 実証例5.1 信頼と規範が経済成長に与える影響の重回帰分析 youdou_55 &lt;- lm_robust(growthrate8099 ~ trust80 + education80 + lny80, data = youdou, se_type = &quot;stata&quot;) summary(youdou_55) ## ## Call: ## lm_robust(formula = growthrate8099 ~ trust80 + education80 + ## lny80, data = youdou, se_type = &quot;stata&quot;) ## ## Standard error type: HC1 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower CI Upper DF ## (Intercept) 6.04885 0.42643 14.1849 8.041e-18 5.189 6.9088 43 ## trust80 0.02058 0.07564 0.2721 7.868e-01 -0.132 0.1731 43 ## education80 2.61208 2.70857 0.9644 3.403e-01 -2.850 8.0744 43 ## lny80 -2.38309 0.49147 -4.8489 1.658e-05 -3.374 -1.3920 43 ## ## Multiple R-squared: 0.5619 , Adjusted R-squared: 0.5313 ## F-statistic: 20.21 on 3 and 43 DF, p-value: 2.531e-08 youdou_55_2 &lt;- lm_robust(growthrate8099 ~ norm80 + education80 + lny80, data = youdou, se_type = &quot;stata&quot;) summary(youdou_55_2) ## ## Call: ## lm_robust(formula = growthrate8099 ~ norm80 + education80 + lny80, ## data = youdou, se_type = &quot;stata&quot;) ## ## Standard error type: HC1 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower CI Upper DF ## (Intercept) 5.2909 0.6682 7.918 6.204e-10 3.94324 6.6385 43 ## norm80 0.3383 0.1370 2.469 1.758e-02 0.06202 0.6145 43 ## education80 4.3872 1.9611 2.237 3.051e-02 0.43233 8.3421 43 ## lny80 -1.9911 0.5746 -3.465 1.213e-03 -3.14987 -0.8324 43 ## ## Multiple R-squared: 0.6391 , Adjusted R-squared: 0.614 ## F-statistic: 41.04 on 3 and 43 DF, p-value: 1.11e-12 実証例5.2 FWL定理の確認 定数項なしの回帰を実行するには, formulaに+0か-1を追加する(参考). なお, estimatr::lm_robust()にはlmのようにresidualsがないため, 必要ならば手動で追加する(参考). ただしこの例では標準偏差は必要でないため, lmを用いた. fwl_1 &lt;- lm(trust80 ~ education80 + lny80, data = youdou) summary(fwl_1) ## ## Call: ## lm(formula = trust80 ~ education80 + lny80, data = youdou) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1.18774 -0.48567 -0.02193 0.56490 1.41091 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 2.6740 0.9493 2.817 0.00723 ** ## education80 -11.2886 4.5080 -2.504 0.01606 * ## lny80 -1.0254 0.9692 -1.058 0.29584 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.6555 on 44 degrees of freedom ## Multiple R-squared: 0.4246, Adjusted R-squared: 0.3985 ## F-statistic: 16.24 on 2 and 44 DF, p-value: 5.233e-06 fwl_2 &lt;- lm(growthrate8099 ~ education80 + lny80, data = youdou) summary(fwl_2) ## ## Call: ## lm(formula = growthrate8099 ~ education80 + lny80, data = youdou) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.46861 -0.23426 0.00308 0.13266 1.01937 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 6.1039 0.4403 13.863 &lt; 2e-16 *** ## education80 2.3797 2.0909 1.138 0.261 ## lny80 -2.4042 0.4495 -5.348 3.03e-06 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.304 on 44 degrees of freedom ## Multiple R-squared: 0.561, Adjusted R-squared: 0.5411 ## F-statistic: 28.12 on 2 and 44 DF, p-value: 1.36e-08 lm(fwl_2$residuals ~ 0 + fwl_1$residuals) %&gt;% summary() ## ## Call: ## lm(formula = fwl_2$residuals ~ 0 + fwl_1$residuals) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.45839 -0.21925 -0.00947 0.13042 1.03231 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## fwl_1$residuals 0.02058 0.06832 0.301 0.765 ## ## Residual standard error: 0.2971 on 46 degrees of freedom ## Multiple R-squared: 0.00197, Adjusted R-squared: -0.01973 ## F-statistic: 0.09078 on 1 and 46 DF, p-value: 0.7645 実証例5.3 FWL定理の別表現の確認 lm(growthrate8099 ~ fwl_1$residuals-1, data = youdou) %&gt;% summary() ## ## Call: ## lm(formula = growthrate8099 ~ fwl_1$residuals - 1, data = youdou) ## ## Residuals: ## Min 1Q Median 3Q Max ## 2.189 2.816 3.086 3.546 3.915 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## fwl_1$residuals 0.02058 0.73877 0.028 0.978 ## ## Residual standard error: 3.212 on 46 degrees of freedom ## Multiple R-squared: 1.688e-05, Adjusted R-squared: -0.02172 ## F-statistic: 0.0007764 on 1 and 46 DF, p-value: 0.9779 実証例5.4 信頼と規範が経済成長に与える影響の重回帰分析の標準誤差 実証例5.1を参照せよ. 実証例5.5 信頼と規範が経済成長に与える影響の多項式モデル youdou_515 &lt;- lm_robust(growthrate8099 ~ y80 + I(y80^2), data = youdou, se_type = &quot;stata&quot;) summary(youdou_515) ## ## Call: ## lm_robust(formula = growthrate8099 ~ y80 + I(y80^2), data = youdou, ## se_type = &quot;stata&quot;) ## ## Standard error type: HC1 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower CI Upper DF ## (Intercept) 6.51866 1.38538 4.705 2.535e-05 3.72662 9.3107 44 ## y80 -1.22615 0.70791 -1.732 9.027e-02 -2.65285 0.2005 44 ## I(y80^2) 0.08935 0.08861 1.008 3.188e-01 -0.08923 0.2679 44 ## ## Multiple R-squared: 0.5503 , Adjusted R-squared: 0.5299 ## F-statistic: 27.39 on 2 and 44 DF, p-value: 1.879e-08 図5-1 散布図と推定された回帰曲線 youdou %&gt;% ggplot(aes(x = y80, y = growthrate8099)) + geom_point() + xlab(&quot;初期時点GDP&quot;) + ylab(&quot;経済成長率&quot;) + geom_smooth(method = &quot;lm&quot;, formula = y ~ x + I(x^2), se = FALSE, color = &quot;black&quot;) 例題5.5 lm_robust(growthrate8099 ~ lny80 * education80, data = youdou, se_type = &quot;stata&quot;) %&gt;% summary() ## ## Call: ## lm_robust(formula = growthrate8099 ~ lny80 * education80, data = youdou, ## se_type = &quot;stata&quot;) ## ## Standard error type: HC1 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower CI Upper DF ## (Intercept) 6.0868 1.1220 5.42485 2.492e-06 3.824 8.3496 43 ## lny80 -2.3937 0.8477 -2.82364 7.167e-03 -4.103 -0.6841 43 ## education80 2.5735 11.0413 0.23308 8.168e-01 -19.693 24.8405 43 ## lny80:education80 -0.1211 7.1314 -0.01698 9.865e-01 -14.503 14.2608 43 ## ## Multiple R-squared: 0.561 , Adjusted R-squared: 0.5304 ## F-statistic: 18.45 on 3 and 43 DF, p-value: 7.651e-08 実証例5.6 都市化の度合いと初期時点GDPの交互作用 先にダミー変数urbanを作成してから回帰分析を実行する(下ではurbanの型はintではなくboolになるが構わない). urbanの値により標本を分ける場合は, lm()のdataでfilter()を使えばよい. youdou &lt;- youdou %&gt;% mutate(urban = did &gt; 0.4) lm(growthrate8099 ~ urban * lny80, data = youdou) %&gt;% summary() ## ## Call: ## lm(formula = growthrate8099 ~ urban * lny80, data = youdou) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.51040 -0.21003 -0.02406 0.16516 0.90189 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 5.74905 0.57763 9.953 9.96e-13 *** ## urbanTRUE -0.17551 0.82444 -0.213 0.832421 ## lny80 -1.91120 0.45104 -4.237 0.000117 *** ## urbanTRUE:lny80 0.06441 0.61108 0.105 0.916546 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.3092 on 43 degrees of freedom ## Multiple R-squared: 0.5564, Adjusted R-squared: 0.5254 ## F-statistic: 17.98 on 3 and 43 DF, p-value: 1.041e-07 lm(growthrate8099 ~ lny80, data = (youdou %&gt;% filter(!urban))) %&gt;% summary() ## ## Call: ## lm(formula = growthrate8099 ~ lny80, data = (youdou %&gt;% filter(!urban))) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.51040 -0.22240 -0.02406 0.12827 0.90189 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 5.7491 0.6512 8.829 7.59e-09 *** ## lny80 -1.9112 0.5085 -3.759 0.00102 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.3486 on 23 degrees of freedom ## Multiple R-squared: 0.3805, Adjusted R-squared: 0.3536 ## F-statistic: 14.13 on 1 and 23 DF, p-value: 0.001022 lm(growthrate8099 ~ lny80, data = (youdou %&gt;% filter(urban))) %&gt;% summary() ## ## Call: ## lm(formula = growthrate8099 ~ lny80, data = (youdou %&gt;% filter(urban))) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.35740 -0.19171 -0.05236 0.17634 0.49475 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 5.5735 0.4881 11.419 3.25e-10 *** ## lny80 -1.8468 0.3421 -5.399 2.77e-05 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.2565 on 20 degrees of freedom ## Multiple R-squared: 0.593, Adjusted R-squared: 0.5727 ## F-statistic: 29.14 on 1 and 20 DF, p-value: 2.769e-05 実証例5.7 都市化の度合いと初期時点GDPのダミー変数同士の交互作用 やはり, 先にダミー変数lny80dを作成する. youdou &lt;- youdou %&gt;% mutate(lny80d = lny80 &gt; 1.4) lm(growthrate8099 ~ urban * lny80d, data = youdou) %&gt;% summary() ## ## Call: ## lm(formula = growthrate8099 ~ urban * lny80d, data = youdou) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.50919 -0.25376 -0.01148 0.24475 0.85353 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 3.45474 0.07544 45.793 &lt; 2e-16 *** ## urbanTRUE -0.23329 0.12459 -1.872 0.067953 . ## lny80dTRUE -0.58003 0.15400 -3.767 0.000498 *** ## urbanTRUE:lny80dTRUE 0.04725 0.20827 0.227 0.821596 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.3288 on 43 degrees of freedom ## Multiple R-squared: 0.4982, Adjusted R-squared: 0.4631 ## F-statistic: 14.23 on 3 and 43 DF, p-value: 1.401e-06 実証例5.8 非線形モデルにおける結合仮説の検定 実証例5.5を参照せよ. 実証例5.9 ポンフェローニ検定 式は実証例5.1を参照せよ. 規範と教育水準の係数が両方とも0であるという帰無仮説を検定する. F検定統計値はcar::linearHypothesis()を使うことで求められる. linearHypothesis(youdou_55_2, c(&quot;norm80&quot;,&quot;education80&quot;), test = &quot;F&quot;) ## Linear hypothesis test ## ## Hypothesis: ## norm80 = 0 ## education80 = 0 ## ## Model 1: restricted model ## Model 2: growthrate8099 ~ norm80 + education80 + lny80 ## ## Res.Df Df F Pr(&gt;F) ## 1 45 ## 2 43 2 5.4375 0.007848 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 表5-5 記述統計量 modelsummary::datasummary()を使うことで簡単に記述統計表が作成できる. ここでは統計量と変数名の表示を日本語に直すため, 一旦dataframeで書き出し, 再度gtで修正した表を表示している. # 変数を選択 vars &lt;- youdou %&gt;% select(growthrate8099, trust80, norm80, education80, lny80) table55 &lt;- datasummary(All(vars) ~ N + Mean + SD + Min + Max, data = youdou, output = &quot;data.frame&quot;, fmt = 3) # 列名 colnames(table55) &lt;- c(&quot;変数&quot;, &quot;サンプルサイズ&quot;, &quot;平均&quot;, &quot;標準偏差&quot;, &quot;最小値&quot;, &quot;最大値&quot;) # 変数名 table55[,1] &lt;- c(&quot;経済成長率&quot;, &quot;信頼&quot;, &quot;規範&quot;, &quot;教育水準&quot;, &quot;初期時点対数GDP&quot;) # 表を出力 gt(table55) #pctbbazucc table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #pctbbazucc thead, #pctbbazucc tbody, #pctbbazucc tfoot, #pctbbazucc tr, #pctbbazucc td, #pctbbazucc th { border-style: none; } #pctbbazucc p { margin: 0; padding: 0; } #pctbbazucc .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #pctbbazucc .gt_caption { padding-top: 4px; padding-bottom: 4px; } #pctbbazucc .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #pctbbazucc .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #pctbbazucc .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #pctbbazucc .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #pctbbazucc .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #pctbbazucc .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #pctbbazucc .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #pctbbazucc .gt_column_spanner_outer:first-child { padding-left: 0; } #pctbbazucc .gt_column_spanner_outer:last-child { padding-right: 0; } #pctbbazucc .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #pctbbazucc .gt_spanner_row { border-bottom-style: hidden; } #pctbbazucc .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #pctbbazucc .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #pctbbazucc .gt_from_md > :first-child { margin-top: 0; } #pctbbazucc .gt_from_md > :last-child { margin-bottom: 0; } #pctbbazucc .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #pctbbazucc .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #pctbbazucc .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #pctbbazucc .gt_row_group_first td { border-top-width: 2px; } #pctbbazucc .gt_row_group_first th { border-top-width: 2px; } #pctbbazucc .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #pctbbazucc .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #pctbbazucc .gt_first_summary_row.thick { border-top-width: 2px; } #pctbbazucc .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #pctbbazucc .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #pctbbazucc .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #pctbbazucc .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #pctbbazucc .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #pctbbazucc .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #pctbbazucc .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #pctbbazucc .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #pctbbazucc .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #pctbbazucc .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #pctbbazucc .gt_left { text-align: left; } #pctbbazucc .gt_center { text-align: center; } #pctbbazucc .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #pctbbazucc .gt_font_normal { font-weight: normal; } #pctbbazucc .gt_font_bold { font-weight: bold; } #pctbbazucc .gt_font_italic { font-style: italic; } #pctbbazucc .gt_super { font-size: 65%; } #pctbbazucc .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #pctbbazucc .gt_asterisk { font-size: 100%; vertical-align: 0; } #pctbbazucc .gt_indent_1 { text-indent: 5px; } #pctbbazucc .gt_indent_2 { text-indent: 10px; } #pctbbazucc .gt_indent_3 { text-indent: 15px; } #pctbbazucc .gt_indent_4 { text-indent: 20px; } #pctbbazucc .gt_indent_5 { text-indent: 25px; } 変数 サンプルサイズ 平均 標準偏差 最小値 最大値 経済成長率 47 3.147 0.449 2.185 3.920 信頼 47 0.033 0.845 -1.668 1.918 規範 47 0.101 0.542 -1.248 1.297 教育水準 47 0.112 0.036 0.069 0.238 初期時点対数GDP 47 1.341 0.167 1.037 1.703 表5-6 推定結果: 被説明変数は経済成長率 回帰結果の表はmodelsummaryを使う (stargazerでも可能だが更新が止まっており, estimatrの結果を表示できないなどデメリットがある). modelsummary::msummary()のgoef_omitで表示しない統計量を指定できるが, これは正規表現を使っているため, 自由度修正済み決定係数\\(\\bar{R}^2\\)を表示し, 通常の決定係数\\(R^2\\)を表示させないためにはR2$とすればよい. F検定統計量の値を表示するにあたっては, このサイトを参考にした. models &lt;- list( &quot;(1)&quot; = lm_robust(growthrate8099 ~ trust80, data = youdou, se_type = &quot;stata&quot;), &quot;(2)&quot; = lm_robust(growthrate8099 ~ norm80, data = youdou, se_type = &quot;stata&quot;), &quot;(3)&quot; = lm_robust(growthrate8099 ~ trust80 + norm80, data = youdou, se_type = &quot;stata&quot;), &quot;(4)&quot; = lm_robust(growthrate8099 ~ trust80 + lny80 + education80, data = youdou, se_type = &quot;stata&quot;), &quot;(5)&quot; = lm_robust(growthrate8099 ~ norm80 + lny80 + education80, data = youdou, se_type = &quot;stata&quot;), &quot;(6)&quot; = lm_robust(growthrate8099 ~ trust80 + norm80 + lny80 + education80, data = youdou, se_type = &quot;stata&quot;)) # F検定統計量の値を表示するモデルを指定 attr(models[3]$`(3)`, &quot;FTEST&quot;) &lt;- TRUE attr(models[6]$`(6)`, &quot;FTEST&quot;) &lt;- TRUE glance_custom.lm_robust &lt;- function(x) { # 上で指定した, F検定統計量の値を表示したいモデルでなければパス if (!isTRUE(attr(x, &quot;FTEST&quot;))) return(NULL) # F検定を実行 ftest &lt;- linearHypothesis(x, test = &quot;F&quot;, c(&quot;trust80&quot;, &quot;norm80&quot;)) # F検定統計量の値とp値をまとめたtibbleを作成 out &lt;- tibble( &quot;F検定統計量の値 $H_0: \\\\beta_{信頼}=0, \\\\beta_{規範}=0$&quot; = ftest[[&quot;F&quot;]][2], &quot; &quot; = sprintf(&quot;(%.3f)&quot;, ftest[[&quot;Pr(&gt;F)&quot;]][2])) return(out) } gm &lt;- tribble( ~raw, ~clean, ~fmt, &quot;F検定統計量の値 $H_0: \\\\beta_{信頼}=0, \\\\beta_{規範}=0$&quot;, &quot;F検定統計量の値 $H_0: \\\\beta_{信頼}=0, \\\\beta_{規範}=0$&quot;, 3, &quot; &quot;, &quot; &quot;, 3, &quot;adj.r.squared&quot;, &quot;$\\\\bar{R}^2$&quot;, 3, &quot;nobs&quot;, &quot;サンプルサイズ&quot;, 0) msummary(models, stars = TRUE, gof_omit=&#39;R2$|RMSE|AIC|BIC|Log.Lik.&#39;, gof_map = gm, coef_map = c(&quot;trust80&quot; = &quot;信頼&quot;, &quot;norm80&quot; = &quot;規範&quot;, &quot;lny80&quot; = &quot;初期時点対数GDP&quot;, &quot;education80&quot; = &quot;教育水準&quot;, &quot;(Intercept)&quot; = &quot;定数項&quot;)) tinytable_0vmcbn4puhc6g1v4z6y1 .table td.tinytable_css_ismtduwcl6z8ruzqcoet, .table th.tinytable_css_ismtduwcl6z8ruzqcoet { border-bottom: solid 0.1em #d3d8dc; } .table td.tinytable_css_l8u943aumdlrzxvt23mz, .table th.tinytable_css_l8u943aumdlrzxvt23mz { text-align: left; } .table td.tinytable_css_huo1g5cimv4k5e90gh4v, .table th.tinytable_css_huo1g5cimv4k5e90gh4v { text-align: center; } .table td.tinytable_css_kmiq5b8izwfhdy5e893t, .table th.tinytable_css_kmiq5b8izwfhdy5e893t { text-align: center; } .table td.tinytable_css_bbbj37w5unc8miutso0a, .table th.tinytable_css_bbbj37w5unc8miutso0a { text-align: center; } .table td.tinytable_css_l9n0xq0otf5rcmm4eujr, .table th.tinytable_css_l9n0xq0otf5rcmm4eujr { text-align: center; } .table td.tinytable_css_6vuz190mne6xcdwvbbhj, .table th.tinytable_css_6vuz190mne6xcdwvbbhj { text-align: center; } .table td.tinytable_css_a3hb9hfq91fn5egwkv0g, .table th.tinytable_css_a3hb9hfq91fn5egwkv0g { text-align: center; } .table td.tinytable_css_v0dtziyuufvnc28td0aj, .table th.tinytable_css_v0dtziyuufvnc28td0aj { border-bottom: solid 0.05em black; } (1) (2) (3) (4) (5) (6) + p 信頼 0.225** 0.036 0.021 -0.012 (0.066) (0.082) (0.076) (0.081) 規範 0.560*** 0.529*** 0.338* 0.342* (0.071) (0.102) (0.137) (0.148) 初期時点対数GDP -2.383*** -1.991** -1.999*** (0.491) (0.575) (0.556) 教育水準 2.612 4.387* 4.270+ (2.709) (1.961) (2.237) 定数項 3.139*** 3.091*** 3.092*** 6.049*** 5.291*** 5.315*** (0.060) (0.048) (0.048) (0.426) (0.668) (0.603) F検定統計量の値 $H_0: \\beta_{信頼}=0, \\beta_{規範}=0$ 29.874 3.460 (0.000) (0.041) $\\bar{R}^2$ 0.161 0.444 0.435 0.531 0.614 0.605 サンプルサイズ 47 47 47 47 47 47 F検定統計量の星の表示は, 手動で追加する必要があると思われるので, 一旦省略とする. 表5-7 推定結果 サポートサイトにはデータはないが, Rではwooldridgeパッケージにまとめられているデータattendを用いることができる. data(&#39;attend&#39;) models_57 &lt;- list( &quot;(1)&quot; = lm_robust(stndfnl ~ atndrte + frosh + soph, data = attend, se_type = &quot;stata&quot;), &quot;(2)&quot; = lm_robust(stndfnl ~ atndrte + priGPA + ACT + frosh + soph, data = attend, se_type = &quot;stata&quot;), &quot;(3)&quot; = lm_robust(stndfnl ~ atndrte * priGPA + ACT + frosh + soph, data = attend, se_type = &quot;stata&quot;), &quot;(4)&quot; = lm_robust(stndfnl ~ atndrte + priGPA + I(priGPA^2) + ACT + I(ACT^2) + frosh + soph, data = attend, se_type = &quot;stata&quot;), &quot;(5)&quot; = lm_robust(stndfnl ~ atndrte * priGPA + atndrte * I(priGPA^2) + ACT + I(ACT^2) + frosh + soph, data = attend, se_type = &quot;stata&quot;)) cm &lt;- c(&quot;atndrte&quot; = &quot;出席割合&quot;, &quot;priGPA&quot; = &quot;前学期までのGPA&quot;, &quot;I(priGPA^2)&quot; = &quot;前学期までのGPA$^2$&quot;, &quot;atndrte:priGPA&quot; = &quot;出席割合 $\\\\times$ 前学期までのGPA&quot;, &quot;atndrte:I(priGPA^2)&quot; = &quot;出席割合 $\\\\times$ 前学期までのGPA$^2$&quot;, &quot;ACT&quot; = &quot;ACT&quot;, &quot;I(ACT^2)&quot; = &quot;ACT$^2$&quot;, &quot;frosh&quot; = &quot;1年生&quot;, &quot;soph&quot; = &quot;2年生&quot;, &quot;(Intercept)&quot; = &quot;定数項&quot;) gm &lt;- tribble( ~raw, ~clean, ~fmt, &quot;adj.r.squared&quot;, &quot;$\\\\bar{R}^2$&quot;, 2, &quot;nobs&quot;, &quot;サンプルサイズ&quot;, 0) # 丸め関数を定義 custom_format &lt;- function(values) { formatted_values &lt;- ifelse(values &lt; 1, signif(values, digits=2), round(values, digits=2)) return(formatted_values) } # なぜか定数項だけ丸めがおかしい? msummary(models_57, stars = TRUE, gof_omit=&#39;R2$|RMSE|AIC|BIC|Log.Lik.&#39;, coef_map = cm, gof_map = gm, fmt = custom_format) tinytable_riz2a42nqhdl8jod57j1 .table td.tinytable_css_i8oloh7kuai95fzcnhmt, .table th.tinytable_css_i8oloh7kuai95fzcnhmt { border-bottom: solid 0.1em #d3d8dc; } .table td.tinytable_css_iw95trk92ugm68r6wtka, .table th.tinytable_css_iw95trk92ugm68r6wtka { text-align: left; } .table td.tinytable_css_qqr4mwjfvcpjr2vy41va, .table th.tinytable_css_qqr4mwjfvcpjr2vy41va { text-align: center; } .table td.tinytable_css_pok4ds6uvqt2y7g2f0u4, .table th.tinytable_css_pok4ds6uvqt2y7g2f0u4 { text-align: center; } .table td.tinytable_css_otd1s5yb4valdglcyg4r, .table th.tinytable_css_otd1s5yb4valdglcyg4r { text-align: center; } .table td.tinytable_css_2ao18sv6m9w6ip3lgml9, .table th.tinytable_css_2ao18sv6m9w6ip3lgml9 { text-align: center; } .table td.tinytable_css_l709nkw2h7yqyq0w7okh, .table th.tinytable_css_l709nkw2h7yqyq0w7okh { text-align: center; } .table td.tinytable_css_iqx3l2bwchtps8017nhu, .table th.tinytable_css_iqx3l2bwchtps8017nhu { border-bottom: solid 0.05em black; } (1) (2) (3) (4) (5) + p 出席割合 0.0082*** 0.0052* -0.022* 0.0062** 0.065* (0.0021) (0.0024) (0.0088) (0.0023) (0.032) 前学期までのGPA 0.43*** -0.56+ -1.5** 3.63 (0.086) (0.32) (0.49) (2.21) 前学期までのGPA$^2$ 0.37*** -0.82+ (0.09) (0.45) 出席割合 $\\times$ 前学期までのGPA 0.012** -0.057* (0.0037) (0.026) 出席割合 $\\times$ 前学期までのGPA$^2$ 0.013* (0.0052) ACT 0.084*** 0.082*** -0.11 -0.11 (0.011) (0.011) (0.1) (0.1) ACT$^2$ 0.0042+ 0.0042+ (0.0023) (0.0022) 1年生 -0.29* -0.049 -0.063 -0.11 -0.1 (0.11) (0.11) (0.1) (0.1) (0.1) 2年生 -0.12 -0.16+ -0.17+ -0.18* -0.19* (0.1) (0.089) (0.088) (0.087) (0.086) 定数項 -0.5** -3.3*** -1 1.38 -3.9 (0.18) (0.3) (0.76) (1.24) (2.95) $\\bar{R}^2$ 0.02 0.20 0.21 0.22 0.23 サンプルサイズ 680 680 680 680 680 F検定統計量の表への記載は省略とし, 下に検定結果を示す. linearHypothesis(models_57[3]$`(3)`, test = &quot;F&quot;, c(&quot;atndrte&quot;, &quot;atndrte:priGPA&quot;)) ## Linear hypothesis test ## ## Hypothesis: ## atndrte = 0 ## atndrte:priGPA = 0 ## ## Model 1: restricted model ## Model 2: stndfnl ~ atndrte * priGPA + ACT + frosh + soph ## ## Res.Df Df F Pr(&gt;F) ## 1 675 ## 2 673 2 7.8085 0.0004442 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 linearHypothesis(models_57[4]$`(4)`, test = &quot;F&quot;, c(&quot;I(priGPA^2)&quot;, &quot;I(ACT^2)&quot;)) ## Linear hypothesis test ## ## Hypothesis: ## I(priGPA^2) = 0 ## I(ACT^2) = 0 ## ## Model 1: restricted model ## Model 2: stndfnl ~ atndrte + priGPA + I(priGPA^2) + ACT + I(ACT^2) + frosh + ## soph ## ## Res.Df Df F Pr(&gt;F) ## 1 674 ## 2 672 2 11.772 9.438e-06 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 linearHypothesis(models_57[5]$`(5)`, test = &quot;F&quot;, c(&quot;atndrte&quot;, &quot;atndrte:priGPA&quot;, &quot;atndrte:I(priGPA^2)&quot;)) ## Linear hypothesis test ## ## Hypothesis: ## atndrte = 0 ## atndrte:priGPA = 0 ## atndrte:I(priGPA^2) = 0 ## ## Model 1: restricted model ## Model 2: stndfnl ~ atndrte * priGPA + atndrte * I(priGPA^2) + ACT + I(ACT^2) + ## frosh + soph ## ## Res.Df Df F Pr(&gt;F) ## 1 673 ## 2 670 3 6.2543 0.0003437 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 linearHypothesis(models_57[5]$`(5)`, test = &quot;F&quot;, c(&quot;I(priGPA^2)&quot;, &quot;atndrte:I(priGPA^2)&quot;, &quot;I(ACT^2)&quot;)) ## Linear hypothesis test ## ## Hypothesis: ## I(priGPA^2) = 0 ## atndrte:I(priGPA^2) = 0 ## I(ACT^2) = 0 ## ## Model 1: restricted model ## Model 2: stndfnl ~ atndrte * priGPA + atndrte * I(priGPA^2) + ACT + I(ACT^2) + ## frosh + soph ## ## Res.Df Df F Pr(&gt;F) ## 1 673 ## 2 670 3 7.5692 5.521e-05 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 linearHypothesis(models_57[5]$`(5)`, test = &quot;F&quot;, c(&quot;atndrte:priGPA&quot;, &quot;atndrte:I(priGPA^2)&quot;)) ## Linear hypothesis test ## ## Hypothesis: ## atndrte:priGPA = 0 ## atndrte:I(priGPA^2) = 0 ## ## Model 1: restricted model ## Model 2: stndfnl ~ atndrte * priGPA + atndrte * I(priGPA^2) + ACT + I(ACT^2) + ## frosh + soph ## ## Res.Df Df F Pr(&gt;F) ## 1 672 ## 2 670 2 5.1942 0.005774 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 練習問題 5-14 [実証] 表5-6を参照せよ. 自由度修正済み決定係数\\(\\bar{R}^2\\)は以下のように定義される (p.158). \\[\\bar{R}^2 = 1 - \\frac{N-1}{N-k-1}\\frac{\\sum_{i=1}^N\\hat{u}_i^2}{\\sum_{i=1}^N(Y_i-\\bar{Y}^2)}\\]. これを決定係数\\(R^2\\)の定義と比べると, 自由度修正済み決定係数は変数の数\\(k\\)が増えるたびに値が小さくなることがわかる. 決定係数\\(R^2\\)ではこのようなことは起きず, 変数の数を増やすと\\(R^2\\)の値は必ず変わらないか大きくなり, 小さくなることはない. 問題文の指示の通り回帰分析を実行する. 1つめの方法では標準偏差の値は一致しないが, 2つ目の方法では一致することが確認できる. practice514c_1 &lt;- lm(trust80 ~ norm80, data = youdou) practice514c_2 &lt;- lm_robust(growthrate8099 ~ 0 + practice514c_1$residuals, data = youdou, se_type = &quot;stata&quot;) summary(practice514c_2)$coefficients ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower ## practice514c_1$residuals 0.0358709 0.7030377 0.05102272 0.9595283 -1.379271 ## CI Upper DF ## practice514c_1$residuals 1.451012 46 practice514c_3 &lt;- lm(growthrate8099 ~ norm80, data = youdou) practice514c_4 &lt;- lm(trust80 ~ 0 + norm80, data = youdou) practice514c_5 &lt;- lm_robust(practice514c_3$residuals ~ 0 + practice514c_4$residuals, se_type = &quot;stata&quot;) summary(practice514c_5)$coefficients ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower ## practice514c_4$residuals 0.03566014 0.08075573 0.4415803 0.6608618 -0.1268927 ## CI Upper DF ## practice514c_4$residuals 0.198213 46 練習問題 5-15 [実証] データはStataで用いられる.dta形式になっているが, これをRで読み込むにはhaven::read_dta()を使う. timss &lt;- read_dta(&quot;data/05_第5章/timss.dta&quot;) practice5_15_a &lt;- lm_robust(mathscore ~ agese_q2 + agese_q3 + agese_q4, data = timss, se_type = &quot;stata&quot;) practice5_15_c &lt;- lm_robust(mathscore ~ gender*agese_q2 + gender*agese_q3 + gender*agese_q4, data = timss, se_type = &quot;stata&quot;) practice5_15_d &lt;- lm_robust(mathscore ~ agese_q2 + agese_q3 + agese_q4 + comu_1 + comu_2 + comu_3 + comu_4 + comu_5 + computer + numpeople + mothereduc_1 + mothereduc_2 + mothereduc_3 + mothereduc_4 + mothereduc_5 + fathereduc_1 + fathereduc_2 + fathereduc_3 + fathereduc_4 + fathereduc_5, data = timss, se_type = &quot;stata&quot;) practice5_15_ea &lt;- lm_robust(sciencescore ~ agese_q2 + agese_q3 + agese_q4, data = timss, se_type = &quot;stata&quot;) practice5_15_ec &lt;- lm_robust(sciencescore ~ gender*agese_q2 + gender*agese_q3 + gender*agese_q4, data = timss, se_type = &quot;stata&quot;) practice5_15_ed &lt;- lm_robust(sciencescore ~ agese_q2 + agese_q3 + agese_q4 + comu_1 + comu_2 + comu_3 + comu_4 + comu_5 + computer + numpeople + mothereduc_1 + mothereduc_2 + mothereduc_3 + mothereduc_4 + mothereduc_5 + fathereduc_1 + fathereduc_2 + fathereduc_3 + fathereduc_4 + fathereduc_5, data = timss, se_type = &quot;stata&quot;) 結果をmodelsummaryで表にまとめる. (d)で用いるダミー変数はcoef_mapで指定して表示を省略している. models_5_15 &lt;- list() models_5_15[[&#39;a&#39;]] &lt;- practice5_15_a models_5_15[[&#39;c&#39;]] &lt;- practice5_15_c models_5_15[[&#39;d&#39;]] &lt;- practice5_15_d models_5_15[[&#39;ea&#39;]] &lt;- practice5_15_ea models_5_15[[&#39;ec&#39;]] &lt;- practice5_15_ec models_5_15[[&#39;ed&#39;]] &lt;- practice5_15_ed cm &lt;- c(&quot;agese_q2&quot;, &quot;agese_q3&quot;, &quot;agese_q4&quot;, &quot;gender&quot;, &quot;gender:agese_q2&quot;, &quot;gender:agese_q3&quot;, &quot;gender:agese_q4&quot;, &quot;(Intercept)&quot;) gm &lt;- tribble( ~raw, ~clean, ~fmt, &quot;adj.r.squared&quot;, &quot;$\\\\bar{R}^2$&quot;, 2, &quot;nobs&quot;, &quot;サンプルサイズ&quot;, 0) msummary(models_5_15, coef_map = cm, gof_map = gm, stars = TRUE) tinytable_9y5tczm921qav4ea2br0 .table td.tinytable_css_e1v0veqio73wyjg2lx6h, .table th.tinytable_css_e1v0veqio73wyjg2lx6h { border-bottom: solid 0.1em #d3d8dc; } .table td.tinytable_css_qxms4fr4k229szbsrj28, .table th.tinytable_css_qxms4fr4k229szbsrj28 { text-align: left; } .table td.tinytable_css_pwjuv88fya4izw91vxz1, .table th.tinytable_css_pwjuv88fya4izw91vxz1 { text-align: center; } .table td.tinytable_css_2bcsr2shvb4s2tupvczy, .table th.tinytable_css_2bcsr2shvb4s2tupvczy { text-align: center; } .table td.tinytable_css_oti3yuil89h5lsm8qj1j, .table th.tinytable_css_oti3yuil89h5lsm8qj1j { text-align: center; } .table td.tinytable_css_abn72zbh7cdm0z59b5d2, .table th.tinytable_css_abn72zbh7cdm0z59b5d2 { text-align: center; } .table td.tinytable_css_p38puof67mru9c5vs1r9, .table th.tinytable_css_p38puof67mru9c5vs1r9 { text-align: center; } .table td.tinytable_css_ihxh9tc8jrlhaotuv0id, .table th.tinytable_css_ihxh9tc8jrlhaotuv0id { text-align: center; } .table td.tinytable_css_xbffg9t0zbvvymbwsoxr, .table th.tinytable_css_xbffg9t0zbvvymbwsoxr { border-bottom: solid 0.05em black; } a c d ea ec ed + p agese_q2 0.174 -0.500 0.218 0.261 0.006 0.317 (0.412) (1.282) (0.394) (0.420) (1.302) (0.406) agese_q3 -0.346 -1.516 -0.460 -0.543 -1.274 -0.614 (0.415) (1.291) (0.395) (0.419) (1.274) (0.406) agese_q4 -1.558*** -2.935* -1.336*** -1.717*** -1.963 -1.522*** (0.419) (1.289) (0.403) (0.428) (1.312) (0.413) gender -0.137 1.031+ (0.586) (0.611) gender:agese_q2 0.445 0.147 (0.824) (0.840) gender:agese_q3 0.783 0.487 (0.830) (0.839) gender:agese_q4 0.920 0.160 (0.839) (0.856) (Intercept) 150.363*** 150.568*** 146.798*** 150.453*** 148.915*** 150.811*** (0.293) (0.908) (2.392) (0.305) (0.923) (1.884) $\\bar{R}^2$ 0.00 0.00 0.09 0.00 0.01 0.07 サンプルサイズ 4536 4536 4536 4536 4536 4536 上の表のa式を見ると, agese_q4の係数は有意に負であることがわかる. つまり, この結果では早生まれの人の成績は4月から6月に生まれた人に比べて低いといえる. 生まれた四半期のダミー変数を4つすべて含むと, ダミー変数の罠に陥る. 4月から6月に生まれた人を表すダミー変数を使用する場合, 定数項なしの回帰を行うことでダミー変数の罠を避けられる. 4月から6月に生まれた人, 早生まれの人を表すダミー変数の係数をそれぞれ\\(\\beta_{Q1}, \\beta_{Q4}\\)とおくと, 帰無仮説は\\(H_0: \\beta_{Q4} &lt; \\beta_{Q1}\\)とすればよい. 上の表のc式を見ると, genderとそれを含む交差項の係数はみな有意とは言えない. つまり, 早生まれの人の成績差に性別は関係がみられなかったとわかる. 上の表のd式を見ると, やはりagese_q4の係数は有意に負であることがわかる (表ではダミー変数の結果は省略している). 対応するモデルを上の表のea, ec, ed式に示す. ea, ed式においてはagese_q4の係数はやはり有意に負であり,その大きさは数学に比べてわずかに大きい. "],["ch6.html", "第6章 パネルデータ分析 (6.1) 式 実証例6.1 保育所が母親の就業に与え影響の固定効果推定 実証例6.2 保育所が母親の就業に与える影響の固定効果推定の標準誤差 実証例6.3 保育所が母親の就業に与え影響のプールされたOLS推定の標準誤差 実証例6.4 保育所が母親の就業に与える影響の時間効果を入れた分析 実証例6.5 保育所が母親の就業に与える影響の都道府県効果と年効果を入れた分析 実証例6.6 保育所が母親の就業に与える影響の個別トレンドと年効果を入れた分析 表6-3 記述統計量 表6-4 年ごとの記述統計量", " 第6章 パネルデータ分析 先に出版社サイトよりデータをダウンロードする. # サポートファイルへのリンク curl &lt;- &quot;https://www.yuhikaku.co.jp/static_files/05385_support06.zip&quot; # ダウンロード保存用フォルダが存在しない場合, 作成 if(!dir.exists(&quot;downloads&quot;)){ dir.create(&quot;downloads&quot;) } cdestfile &lt;- &quot;downloads/support06.zip&quot; download.file(curl, cdestfile) # データ保存用フォルダが存在しない場合, 作成 if(!dir.exists(&quot;data&quot;)){ dir.create(&quot;data&quot;) } # WSL上のRで解凍すると文字化けするので、Linuxのコマンドを外部呼び出し # Windowsの場合は別途コマンドを用いる. if(.Platform$OS.type == &quot;unix&quot;) { system(sprintf(&#39;unzip -n -Ocp932 %s -d %s&#39;, &quot;downloads/support06.zip&quot;, &quot;./data&quot;)) } else { print(&quot;Windowsで解凍するコマンドを別途追加せよ.&quot;) } 必要なライブラリを読み込む. library(tidyverse) library(estimatr) library(modelsummary) library(fixest) library(gt) 固定効果モデルをRで推定するためのパッケージは複数あり, これまで使ってきたestimatrのほかにfixestやplmなどが挙げられる. ここではestimatrに加えて, 処理が高速とされるfixestでの推定方法も記す. (6.1) 式 データ読込時, 本文中で分析されている通りに絞り込みを行う. 通常通りestimatr::lm_robust()で不均一分散を仮定して回帰するか, feols()を用いることもできる. feols()ではvcov = \"HC1\"と指定することでStataと同じ標準偏差を得られる. yamaguchi &lt;- read.csv(&quot;data/06_第6章/yamaguchi.csv&quot;) yamaguchi &lt;- yamaguchi %&gt;% filter(year &gt; 1999) %&gt;% filter(hh.type == &quot;all&quot;) lm_robust(emp.rate ~ cap.rate, data = yamaguchi, se_type = &quot;stata&quot;) ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower CI Upper DF ## (Intercept) 0.2081492 0.01814393 11.47212 7.493392e-22 0.1722755 0.2440230 139 ## cap.rate 0.6154919 0.04391207 14.01646 2.244232e-28 0.5286699 0.7023139 139 feols(emp.rate ~ cap.rate, vcov = &quot;HC1&quot;, data = yamaguchi) ## OLS estimation, Dep. Var.: emp.rate ## Observations: 141 ## Standard-errors: Heteroskedasticity-robust ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 0.208149 0.018144 11.4721 &lt; 2.2e-16 *** ## cap.rate 0.615492 0.043912 14.0165 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## RMSE: 0.066148 Adj. R2: 0.530204 実証例6.1 保育所が母親の就業に与え影響の固定効果推定 固定効果モデルもlm_robust()で推定できる. clusters引数にクラスタのレベル, fixed_effectsに固定効果の変数を指定する. feolsではパイプ|の後ろに固定効果の変数を指定するのが本来の方法で, デフォルトでクラスター構造に頑健な標準誤差が得られるはずだが, なぜか異なる値となった. ご存じの方ご教授ください. かわりに固定効果の変数とするprefを直接formulaに足すことで, Stataと同じ標準誤差を得られた. lm_robust(emp.rate ~ cap.rate, data = yamaguchi, clusters = pref, fixed_effects = pref, se_type = &quot;stata&quot;) ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower CI Upper DF ## cap.rate 0.8051027 0.0553063 14.55716 7.736456e-19 0.6937769 0.9164285 46 feols(emp.rate ~ cap.rate + pref, cluster = ~pref, data = yamaguchi) ## OLS estimation, Dep. Var.: emp.rate ## Observations: 141 ## Standard-errors: Clustered (pref) ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 0.089848 0.021462 4.18630 1.2656e-04 *** ## cap.rate 0.805103 0.055306 14.55716 &lt; 2.2e-16 *** ## pref京都府 -0.015791 0.001458 -10.82826 3.0501e-14 *** ## pref佐賀県 0.101711 0.000079 1291.87409 &lt; 2.2e-16 *** ## pref兵庫県 0.013938 0.007831 1.77976 8.1722e-02 . ## pref北海道 0.047209 0.008154 5.78946 5.9824e-07 *** ## pref千葉県 0.036871 0.009491 3.88481 3.2612e-04 *** ## pref和歌山県 -0.100145 0.003400 -29.45717 &lt; 2.2e-16 *** ## ... 40 coefficients remaining (display them with summary() or use argument n) ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## RMSE: 0.012388 Adj. R2: 0.975372 # このやり方のほうが直感的だと思うのですが, なぜか同じ標準誤差を得られず... ご存じの方ご教授ください. # feols(emp.rate ~ cap.rate | pref, data = yamaguchi) 実証例6.2 保育所が母親の就業に与える影響の固定効果推定の標準誤差 実証例6.1を参照せよ. 実証例6.3 保育所が母親の就業に与え影響のプールされたOLS推定の標準誤差 自由度修正ホワイト標準誤差を得る式は(6.1)式を参照せよ. lm_robust()でクラスター構造に頑健な標準誤差を求めるにはclusters引数を指定する. 一方feols()ではvcov引数にクラスター構造を指定すればよい. # クラスター構造に頑健な標準誤差 lm_robust(emp.rate ~ cap.rate, data = yamaguchi, clusters = pref, se_type = &quot;stata&quot;) ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower CI Upper DF ## (Intercept) 0.2081492 0.02820058 7.381027 2.451454e-09 0.1513844 0.2649140 46 ## cap.rate 0.6154919 0.06742944 9.127940 6.822894e-12 0.4797635 0.7512203 46 feols(emp.rate ~ cap.rate, vcov = ~pref, data = yamaguchi) ## OLS estimation, Dep. Var.: emp.rate ## Observations: 141 ## Standard-errors: Clustered (pref) ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 0.208149 0.028201 7.38103 2.4515e-09 *** ## cap.rate 0.615492 0.067429 9.12794 6.8229e-12 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## RMSE: 0.066148 Adj. R2: 0.530204 実証例6.4 保育所が母親の就業に与える影響の時間効果を入れた分析 lm_robust()では, fixed_effects引数に時間効果の変数yearを指定する. 一方feols()ではformulaの後ろに|を付けて固定効果の変数を指定する. lm_robust(emp.rate ~ cap.rate, data = yamaguchi, clusters = pref, fixed_effects = year, se_type = &quot;stata&quot;) ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower CI Upper DF ## cap.rate 0.5848218 0.07301598 8.009504 2.863598e-10 0.4378482 0.7317953 46 feols(emp.rate ~ cap.rate | year, cluster = ~pref, data = yamaguchi) ## OLS estimation, Dep. Var.: emp.rate ## Observations: 141 ## Fixed-effects: year: 3 ## Standard-errors: Clustered (pref) ## Estimate Std. Error t value Pr(&gt;|t|) ## cap.rate 0.584822 0.073016 8.0095 2.8636e-10 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## RMSE: 0.065255 Adj. R2: 0.536128 ## Within R2: 0.489665 実証例6.5 保育所が母親の就業に与える影響の都道府県効果と年効果を入れた分析 lm_robust()では, fixed_effects引数に都道府県効果と年効果両方pref + yearを指定する. 一方でfeols()では実証例6.1同様prefをパイプ|の後ろにいれると異なる標準誤差が出力されるため, やはりformulaに直接加え, cluster引数に都道府県を指定する. lm_robust(emp.rate ~ cap.rate, data = yamaguchi, clusters = pref, fixed_effects = pref + year, se_type = &quot;stata&quot;) ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower CI Upper DF ## cap.rate 0.09032499 0.07356807 1.227774 0.2257775 -0.05775986 0.2384098 46 feols(emp.rate ~ cap.rate + pref | year, cluster = ~pref, data = yamaguchi) ## OLS estimation, Dep. Var.: emp.rate ## Observations: 141 ## Fixed-effects: year: 3 ## Standard-errors: Clustered (pref) ## Estimate Std. Error t value Pr(&gt;|t|) ## cap.rate 0.090325 0.073568 1.22777 2.2578e-01 ## pref京都府 -0.034638 0.001940 -17.85623 &lt; 2.2e-16 *** ## pref佐賀県 0.102728 0.000105 980.90855 &lt; 2.2e-16 *** ## pref兵庫県 -0.087272 0.010417 -8.37790 8.2512e-11 *** ## pref北海道 -0.058177 0.010847 -5.36353 2.5715e-06 *** ## pref千葉県 -0.085792 0.012625 -6.79539 1.8483e-08 *** ## pref和歌山県 -0.056208 0.004522 -12.42916 2.6166e-16 *** ## pref埼玉県 -0.079666 0.014887 -5.35148 2.6792e-06 *** ## ... 39 coefficients remaining (display them with summary() or use argument n) ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## RMSE: 0.007106 Adj. R2: 0.991718 ## Within R2: 0.993948 # 下では異なる標準誤差が出力される. # feols(emp.rate ~ cap.rate | pref + year, cluster = ~pref, data = yamaguchi) 実証例6.6 保育所が母親の就業に与える影響の個別トレンドと年効果を入れた分析 lm_robust()で複数の固定効果を入れるとき, formulaやfixed_effectsの指定の仕方によっては一部の変数がNAになるなど挙動がおかしくなることがある (参考). feols()では, formula中にi()を使って固定効果変数を指定することで, 正しい標準誤差が得られるが, 正しい標準誤差が必要ない場合はコメントした3つめの方法のほうが速いとのこと (feols公式リファレンスのInteractionsの節を見よ). lm_robust(emp.rate ~ cap.rate + pref + pref:year + factor(year), data = yamaguchi, clusters = pref, se_type = &quot;stata&quot;) ## 1 coefficient not defined because the design matrix is rank deficient ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) NA NA NA NA ## cap.rate 9.152586e-02 1.711945e-01 0.53463092 5.954800e-01 ## pref京都府 -2.871962e+00 2.980210e-01 -9.63677465 1.302610e-12 ## pref佐賀県 2.217746e+00 1.038863e+00 2.13478216 3.813866e-02 ## pref兵庫県 -1.674131e+00 3.096746e-01 -5.40609737 2.224415e-06 ## pref北海道 -2.027188e+00 3.719798e-01 -5.44972514 1.916879e-06 ## pref千葉県 1.008553e+00 8.235894e-01 1.22458214 2.269671e-01 ## pref和歌山県 -2.425115e+00 1.995858e+00 -1.21507391 2.305380e-01 ## pref埼玉県 -3.204944e+00 2.345052e-01 -13.66683775 8.267630e-18 ## pref大分県 5.073632e-03 1.070371e-01 0.04740068 9.623991e-01 ## pref大阪府 -3.544666e+00 5.791509e-01 -6.12045289 1.910245e-07 ## pref奈良県 -2.726156e+00 2.286274e-01 -11.92401378 1.133222e-15 ## pref宮城県 6.645164e+00 2.957274e-01 22.47057454 1.925684e-26 ## pref宮崎県 8.787160e-01 7.167609e-02 12.25954090 4.264852e-16 ## pref富山県 6.196146e-01 2.014006e+00 0.30765283 7.597352e-01 ## pref山口県 1.556481e+00 2.694339e-01 5.77685746 6.247431e-07 ## pref山形県 1.262470e+01 1.220833e+00 10.34105881 1.385765e-13 ## pref山梨県 1.024933e+00 2.030432e+00 0.50478581 6.161191e-01 ## pref岐阜県 1.822042e+00 5.200581e-01 3.50353633 1.034380e-03 ## pref岡山県 1.027390e+00 7.911333e-01 1.29863084 2.005433e-01 ## pref岩手県 3.840666e+00 2.153963e+00 1.78306992 8.117418e-02 ## pref島根県 -2.455887e+00 3.853635e+00 -0.63729092 5.270947e-01 ## pref広島県 1.248305e+00 3.022802e-01 4.12962970 1.515124e-04 ## pref徳島県 1.757559e+00 5.668540e-01 3.10054989 3.293771e-03 ## pref愛媛県 -4.404752e-01 7.973306e-01 -0.55243733 5.833233e-01 ## pref愛知県 3.278383e-01 7.286383e-01 0.44993284 6.548721e-01 ## pref新潟県 3.477857e+00 1.423998e+00 2.44231814 1.849492e-02 ## pref東京都 7.338397e-01 1.591782e+00 0.46101772 6.469583e-01 ## pref栃木県 3.625324e+00 8.809020e-02 41.15468113 6.112933e-38 ## pref沖縄県 4.899894e-01 6.460539e-01 0.75843429 4.520596e-01 ## pref滋賀県 1.900476e+00 2.319337e-01 8.19404868 1.533055e-10 ## pref熊本県 3.927163e+00 2.068275e-01 18.98762881 2.125341e-23 ## pref石川県 3.910248e-01 1.234511e+00 0.31674467 7.528704e-01 ## pref神奈川県 -6.634092e-01 1.870506e-01 -3.54668267 9.101361e-04 ## pref福井県 3.534852e+00 1.823700e+00 1.93828551 5.873952e-02 ## pref福岡県 1.497746e+00 6.314768e-01 2.37181530 2.194159e-02 ## pref福島県 1.117377e+01 5.085348e-01 21.97246851 4.954880e-26 ## pref秋田県 1.732411e+00 2.860854e+00 0.60555731 5.477851e-01 ## pref群馬県 -4.778096e+00 1.218682e+00 -3.92070884 2.917814e-04 ## pref茨城県 1.526224e+00 6.399066e-01 2.38507320 2.125240e-02 ## pref長崎県 -6.210215e-01 1.309920e+00 -0.47409124 6.376776e-01 ## pref長野県 2.192693e+00 1.028524e+00 2.13188335 3.838924e-02 ## pref青森県 -1.478740e+00 2.070665e+00 -0.71413775 4.787502e-01 ## pref静岡県 1.468932e+00 4.231490e-01 3.47142978 1.137182e-03 ## pref香川県 -2.331767e-01 1.591359e-01 -1.46526777 1.496500e-01 ## pref高知県 7.650533e+00 3.197364e-01 23.92762201 1.337744e-27 ## pref鳥取県 1.845473e+00 6.878888e-01 2.68280711 1.010907e-02 ## pref鹿児島県 -1.877756e+00 3.170802e-01 -5.92202350 3.789537e-07 ## factor(year)2005 3.621003e-02 5.450406e-03 6.64354739 3.125769e-08 ## factor(year)2010 7.467874e-02 1.192688e-02 6.26138176 1.173411e-07 ## pref三重県:year 1.644877e-04 3.027017e-05 5.43398685 2.022627e-06 ## pref京都府:year 1.579628e-03 1.206210e-04 13.09579396 3.974466e-17 ## pref佐賀県:year -8.903847e-04 5.485271e-04 -1.62322835 1.113748e-01 ## pref兵庫県:year 9.560232e-04 1.362719e-04 7.01555630 8.635591e-09 ## pref北海道:year 1.146626e-03 1.678456e-04 6.83143759 1.631637e-08 ## pref千葉県:year -3.812174e-04 3.951511e-04 -0.96473834 3.397205e-01 ## pref和歌山県:year 1.345951e-03 1.030958e-03 1.30553359 1.982033e-01 ## pref埼玉県:year 1.723351e-03 1.039687e-04 16.57567312 5.032897e-21 ## pref大分県:year 1.765525e-04 2.902556e-05 6.08265810 2.176731e-07 ## pref大阪府:year 1.880450e-03 3.080743e-04 6.10388586 2.022798e-07 ## pref奈良県:year 1.470248e-03 1.376076e-04 10.68435296 4.754684e-14 ## pref宮城県:year -3.142883e-03 1.619454e-04 -19.40706015 8.677081e-24 ## pref宮崎県:year -2.218564e-04 6.967251e-05 -3.18427498 2.604335e-03 ## pref富山県:year -7.061253e-05 1.046817e-03 -0.06745453 9.465122e-01 ## pref山口県:year -6.135854e-04 1.078606e-04 -5.68869014 8.458394e-07 ## pref山形県:year -6.020572e-03 6.333876e-04 -9.50535243 1.992064e-12 ## pref山梨県:year -3.363943e-04 1.047967e-03 -0.32099713 7.496664e-01 ## pref岐阜県:year -7.487609e-04 2.898465e-04 -2.58330181 1.303005e-02 ## pref岡山県:year -3.387222e-04 4.218142e-04 -0.80301292 4.260971e-01 ## pref岩手県:year -1.690788e-03 1.102209e-03 -1.53399990 1.318795e-01 ## pref島根県:year 1.475717e-03 1.960741e-03 0.75263199 4.555056e-01 ## pref広島県:year -4.637889e-04 1.782963e-04 -2.60122545 1.245268e-02 ## pref徳島県:year -6.795045e-04 3.146540e-04 -2.15952899 3.605737e-02 ## pref愛媛県:year 3.761926e-04 3.701080e-04 1.01644011 3.147364e-01 ## pref愛知県:year -2.571934e-05 3.373954e-04 -0.07622908 9.395674e-01 ## pref新潟県:year -1.503260e-03 7.502503e-04 -2.00367859 5.101487e-02 ## pref東京都:year -2.338547e-04 7.729007e-04 -0.30256756 7.635834e-01 ## pref栃木県:year -1.632796e-03 6.269039e-05 -26.04539636 3.517850e-29 ## pref沖縄県:year -4.421173e-05 3.426818e-04 -0.12901685 8.979068e-01 ## pref滋賀県:year -7.991731e-04 9.387049e-05 -8.51357175 5.234315e-11 ## pref熊本県:year -1.746277e-03 6.820316e-05 -25.60404923 7.347324e-29 ## pref石川県:year 3.479122e-05 6.635606e-04 0.05243112 9.584122e-01 ## pref神奈川県:year 4.399746e-04 8.175846e-05 5.38139577 2.419722e-06 ## pref福井県:year -1.519713e-03 9.530303e-04 -1.59461184 1.176477e-01 ## pref福岡県:year -5.910875e-04 2.895411e-04 -2.04146347 4.696474e-02 ## pref福島県:year -5.359968e-03 2.700037e-04 -19.85146155 3.414406e-24 ## pref秋田県:year -6.234947e-04 1.459698e-03 -0.42713947 6.712705e-01 ## pref群馬県:year 2.554465e-03 6.348100e-04 4.02398309 2.113878e-04 ## pref茨城県:year -6.014168e-04 3.371727e-04 -1.78370522 8.106941e-02 ## pref長崎県:year 5.083915e-04 6.835363e-04 0.74376677 4.608000e-01 ## pref長野県:year -9.269502e-04 5.525346e-04 -1.67763279 1.002018e-01 ## pref青森県:year 9.522157e-04 1.070143e-03 0.88980216 3.782022e-01 ## pref静岡県:year -5.695088e-04 1.940567e-04 -2.93475524 5.193745e-03 ## pref香川県:year 3.020400e-04 1.086500e-04 2.77993665 7.850358e-03 ## pref高知県:year -3.589389e-03 1.097551e-04 -32.70361670 1.691800e-33 ## pref鳥取県:year -6.801584e-04 3.858225e-04 -1.76287871 8.456361e-02 ## pref鹿児島県:year 1.115343e-03 1.334348e-04 8.35871307 8.801002e-11 ## CI Lower CI Upper DF ## (Intercept) NA NA NA ## cap.rate -2.530707e-01 4.361225e-01 46 ## pref京都府 -3.471847e+00 -2.272076e+00 46 ## pref佐賀県 1.266234e-01 4.308868e+00 46 ## pref兵庫県 -2.297474e+00 -1.050788e+00 46 ## pref北海道 -2.775944e+00 -1.278431e+00 46 ## pref千葉県 -6.492466e-01 2.666352e+00 46 ## pref和歌山県 -6.442569e+00 1.592339e+00 46 ## pref埼玉県 -3.676978e+00 -2.732910e+00 46 ## pref大分県 -2.103809e-01 2.205282e-01 46 ## pref大阪府 -4.710436e+00 -2.378895e+00 46 ## pref奈良県 -3.186359e+00 -2.265953e+00 46 ## pref宮城県 6.049896e+00 7.240432e+00 46 ## pref宮崎県 7.344395e-01 1.022992e+00 46 ## pref富山県 -3.434369e+00 4.673598e+00 46 ## pref山口県 1.014139e+00 2.098824e+00 46 ## pref山形県 1.016729e+01 1.508211e+01 46 ## pref山梨県 -3.062114e+00 5.111980e+00 46 ## pref岐阜県 7.752198e-01 2.868865e+00 46 ## pref岡山県 -5.650786e-01 2.619859e+00 46 ## pref岩手県 -4.950360e-01 8.176369e+00 46 ## pref島根県 -1.021285e+01 5.301078e+00 46 ## pref広島県 6.398469e-01 1.856764e+00 46 ## pref徳島県 6.165411e-01 2.898577e+00 46 ## pref愛媛県 -2.045419e+00 1.164468e+00 46 ## pref愛知県 -1.138835e+00 1.794511e+00 46 ## pref新潟県 6.114970e-01 6.344217e+00 46 ## pref東京都 -2.470251e+00 3.937931e+00 46 ## pref栃木県 3.448008e+00 3.802641e+00 46 ## pref沖縄県 -8.104496e-01 1.790428e+00 46 ## pref滋賀県 1.433618e+00 2.367335e+00 46 ## pref熊本県 3.510841e+00 4.343486e+00 46 ## pref石川県 -2.093917e+00 2.875967e+00 46 ## pref神奈川県 -1.039923e+00 -2.868958e-01 46 ## pref福井県 -1.360665e-01 7.205771e+00 46 ## pref福岡県 2.266495e-01 2.768843e+00 46 ## pref福島県 1.015014e+01 1.219739e+01 46 ## pref秋田県 -4.026190e+00 7.491013e+00 46 ## pref群馬県 -7.231176e+00 -2.325017e+00 46 ## pref茨城県 2.381589e-01 2.814289e+00 46 ## pref長崎県 -3.257753e+00 2.015710e+00 46 ## pref長野県 1.223817e-01 4.263004e+00 46 ## pref青森県 -5.646773e+00 2.689293e+00 46 ## pref静岡県 6.171773e-01 2.320687e+00 46 ## pref香川県 -5.535006e-01 8.714723e-02 46 ## pref高知県 7.006937e+00 8.294129e+00 46 ## pref鳥取県 4.608246e-01 3.230121e+00 46 ## pref鹿児島県 -2.516006e+00 -1.239507e+00 46 ## factor(year)2005 2.523893e-02 4.718112e-02 46 ## factor(year)2010 5.067118e-02 9.868630e-02 46 ## pref三重県:year 1.035570e-04 2.254184e-04 46 ## pref京都府:year 1.336830e-03 1.822425e-03 46 ## pref佐賀県:year -1.994513e-03 2.137430e-04 46 ## pref兵庫県:year 6.817221e-04 1.230324e-03 46 ## pref北海道:year 8.087709e-04 1.484482e-03 46 ## pref千葉県:year -1.176615e-03 4.141805e-04 46 ## pref和歌山県:year -7.292608e-04 3.421163e-03 46 ## pref埼玉県:year 1.514073e-03 1.932629e-03 46 ## pref大分県:year 1.181271e-04 2.349780e-04 46 ## pref大阪府:year 1.260329e-03 2.500572e-03 46 ## pref奈良県:year 1.193258e-03 1.747238e-03 46 ## pref宮城県:year -3.468862e-03 -2.816904e-03 46 ## pref宮崎県:year -3.620999e-04 -8.161295e-05 46 ## pref富山県:year -2.177745e-03 2.036520e-03 46 ## pref山口県:year -8.306974e-04 -3.964733e-04 46 ## pref山形県:year -7.295515e-03 -4.745629e-03 46 ## pref山梨県:year -2.445842e-03 1.773053e-03 46 ## pref岐阜県:year -1.332192e-03 -1.653302e-04 46 ## pref岡山県:year -1.187790e-03 5.103456e-04 46 ## pref岩手県:year -3.909419e-03 5.278429e-04 46 ## pref島根県:year -2.471051e-03 5.422485e-03 46 ## pref広島県:year -8.226808e-04 -1.048970e-04 46 ## pref徳島県:year -1.312870e-03 -4.613879e-05 46 ## pref愛媛県:year -3.687961e-04 1.121181e-03 46 ## pref愛知県:year -7.048610e-04 6.534223e-04 46 ## pref新潟県:year -3.013436e-03 6.915061e-06 46 ## pref東京都:year -1.789623e-03 1.321914e-03 46 ## pref栃木県:year -1.758985e-03 -1.506607e-03 46 ## pref沖縄県:year -7.339945e-04 6.455710e-04 46 ## pref滋賀県:year -9.881246e-04 -6.102217e-04 46 ## pref熊本県:year -1.883563e-03 -1.608991e-03 46 ## pref石川県:year -1.300887e-03 1.370469e-03 46 ## pref神奈川県:year 2.754034e-04 6.045459e-04 46 ## pref福井県:year -3.438064e-03 3.986371e-04 46 ## pref福岡県:year -1.173903e-03 -8.271570e-06 46 ## pref福島県:year -5.903457e-03 -4.816479e-03 46 ## pref秋田県:year -3.561715e-03 2.314725e-03 46 ## pref群馬県:year 1.276658e-03 3.832271e-03 46 ## pref茨城県:year -1.280110e-03 7.727675e-05 46 ## pref長崎県:year -8.674956e-04 1.884279e-03 46 ## pref長野県:year -2.039145e-03 1.852443e-04 46 ## pref青森県:year -1.201871e-03 3.106302e-03 46 ## pref静岡県:year -9.601246e-04 -1.788930e-04 46 ## pref香川県:year 8.333897e-05 5.207410e-04 46 ## pref高知県:year -3.810314e-03 -3.368463e-03 46 ## pref鳥取県:year -1.456779e-03 9.646215e-05 46 ## pref鹿児島県:year 8.467530e-04 1.383934e-03 46 feols(emp.rate ~ cap.rate + i(pref) + i(year) + i(pref, year), vcov = ~pref, data = yamaguchi) ## The variable &#39;pref::鹿児島県:year&#39; has been removed because of collinearity (see $collin.var). ## OLS estimation, Dep. Var.: emp.rate ## Observations: 141 ## Standard-errors: Clustered (pref) ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 2.230687 0.266870 8.358713 8.8010e-11 *** ## cap.rate 0.091526 0.171194 0.534631 5.9548e-01 ## pref::京都府 -2.871962 0.298021 -9.636775 1.3026e-12 *** ## pref::佐賀県 2.217746 1.038863 2.134782 3.8139e-02 * ## pref::兵庫県 -1.674131 0.309675 -5.406097 2.2244e-06 *** ## pref::北海道 -2.027188 0.371980 -5.449725 1.9169e-06 *** ## pref::千葉県 1.008553 0.823589 1.224582 2.2697e-01 ## pref::和歌山県 -2.425115 1.995858 -1.215074 2.3054e-01 ## ... 88 coefficients remaining (display them with summary() or use argument n) ## ... 1 variable was removed because of collinearity (pref::鹿児島県:year) ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## RMSE: 0.002324 Adj. R2: 0.998209 # 係数の大きさは正しく, 速度も速い (はず) だが標準誤差が異なる. # feols(emp.rate ~ cap.rate | pref + year + pref[year], vcov = ~pref, data = yamaguchi) 表6-3 記述統計量 第5章の表5-5と同様にdatasummary()を用いてデータフレームを書き出し, 適宜リネームを行えばよい. # 変数を選択 vars &lt;- yamaguchi %&gt;% select(emp.rate, cap.rate, age, age.hus, emp.rate.hus, urate) table63 &lt;- datasummary(All(vars) ~ N + Mean + SD + Min + Max, output = &quot;data.frame&quot;, data = yamaguchi, fmt = 3) # 列名 colnames(table63) &lt;- c(&quot;変数&quot;, &quot;サンプルサイズ&quot;, &quot;平均&quot;, &quot;標準偏差&quot;, &quot;最小値&quot;, &quot;最大値&quot;) # 変数名 table63[,1] &lt;- c(&quot;母親就業率&quot;, &quot;保育所定員率&quot;, &quot;母親平均年齢&quot;, &quot;父親平均年齢&quot;, &quot;父親就業率&quot;, &quot;失業率&quot;) # 表を出力 gt(table63) #csyydyeczx table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #csyydyeczx thead, #csyydyeczx tbody, #csyydyeczx tfoot, #csyydyeczx tr, #csyydyeczx td, #csyydyeczx th { border-style: none; } #csyydyeczx p { margin: 0; padding: 0; } #csyydyeczx .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #csyydyeczx .gt_caption { padding-top: 4px; padding-bottom: 4px; } #csyydyeczx .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #csyydyeczx .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #csyydyeczx .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #csyydyeczx .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #csyydyeczx .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #csyydyeczx .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #csyydyeczx .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #csyydyeczx .gt_column_spanner_outer:first-child { padding-left: 0; } #csyydyeczx .gt_column_spanner_outer:last-child { padding-right: 0; } #csyydyeczx .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #csyydyeczx .gt_spanner_row { border-bottom-style: hidden; } #csyydyeczx .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #csyydyeczx .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #csyydyeczx .gt_from_md > :first-child { margin-top: 0; } #csyydyeczx .gt_from_md > :last-child { margin-bottom: 0; } #csyydyeczx .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #csyydyeczx .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #csyydyeczx .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #csyydyeczx .gt_row_group_first td { border-top-width: 2px; } #csyydyeczx .gt_row_group_first th { border-top-width: 2px; } #csyydyeczx .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #csyydyeczx .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #csyydyeczx .gt_first_summary_row.thick { border-top-width: 2px; } #csyydyeczx .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #csyydyeczx .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #csyydyeczx .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #csyydyeczx .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #csyydyeczx .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #csyydyeczx .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #csyydyeczx .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #csyydyeczx .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #csyydyeczx .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #csyydyeczx .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #csyydyeczx .gt_left { text-align: left; } #csyydyeczx .gt_center { text-align: center; } #csyydyeczx .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #csyydyeczx .gt_font_normal { font-weight: normal; } #csyydyeczx .gt_font_bold { font-weight: bold; } #csyydyeczx .gt_font_italic { font-style: italic; } #csyydyeczx .gt_super { font-size: 65%; } #csyydyeczx .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #csyydyeczx .gt_asterisk { font-size: 100%; vertical-align: 0; } #csyydyeczx .gt_indent_1 { text-indent: 5px; } #csyydyeczx .gt_indent_2 { text-indent: 10px; } #csyydyeczx .gt_indent_3 { text-indent: 15px; } #csyydyeczx .gt_indent_4 { text-indent: 20px; } #csyydyeczx .gt_indent_5 { text-indent: 25px; } 変数 サンプルサイズ 平均 標準偏差 最小値 最大値 母親就業率 141 0.431 0.097 0.229 0.640 保育所定員率 141 0.363 0.115 0.138 0.655 母親平均年齢 141 32.730 0.670 31.490 34.764 父親平均年齢 141 34.834 0.531 33.877 36.859 父親就業率 141 0.965 0.018 0.878 0.989 失業率 141 0.057 0.015 0.030 0.119 表6-4 年ごとの記述統計量 やはりdatasummary()を用いる. formula引数を適宜変更するだけで容易に作成できる. # 変数を選択 table64 &lt;- datasummary(emp.rate * (Mean + SD) + cap.rate * (Mean + SD) ~ factor(year), output = &quot;data.frame&quot;, data = yamaguchi, fmt = 3) # 列名 colnames(table64) &lt;- c(&quot; &quot;, &quot;変数&quot;, &quot;2000&quot;, &quot;2005&quot;, &quot;2010&quot;) # tibbleの都合上1列目は空白1文字とする # 変数名 table64[,1] &lt;- c(&quot;母親就業率&quot;, &quot;&quot;, &quot;保育所定員率&quot;, &quot;&quot;) # 統計量を日本語に直す table64[,2] &lt;- c(&quot;平均&quot;, &quot;標準偏差&quot;, &quot;平均&quot;, &quot;標準偏差&quot;) # 表を出力 gt(table64) #ewmixjnxcv table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #ewmixjnxcv thead, #ewmixjnxcv tbody, #ewmixjnxcv tfoot, #ewmixjnxcv tr, #ewmixjnxcv td, #ewmixjnxcv th { border-style: none; } #ewmixjnxcv p { margin: 0; padding: 0; } #ewmixjnxcv .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #ewmixjnxcv .gt_caption { padding-top: 4px; padding-bottom: 4px; } #ewmixjnxcv .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #ewmixjnxcv .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #ewmixjnxcv .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ewmixjnxcv .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ewmixjnxcv .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ewmixjnxcv .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #ewmixjnxcv .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #ewmixjnxcv .gt_column_spanner_outer:first-child { padding-left: 0; } #ewmixjnxcv .gt_column_spanner_outer:last-child { padding-right: 0; } #ewmixjnxcv .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #ewmixjnxcv .gt_spanner_row { border-bottom-style: hidden; } #ewmixjnxcv .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #ewmixjnxcv .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #ewmixjnxcv .gt_from_md > :first-child { margin-top: 0; } #ewmixjnxcv .gt_from_md > :last-child { margin-bottom: 0; } #ewmixjnxcv .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #ewmixjnxcv .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #ewmixjnxcv .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #ewmixjnxcv .gt_row_group_first td { border-top-width: 2px; } #ewmixjnxcv .gt_row_group_first th { border-top-width: 2px; } #ewmixjnxcv .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ewmixjnxcv .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #ewmixjnxcv .gt_first_summary_row.thick { border-top-width: 2px; } #ewmixjnxcv .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ewmixjnxcv .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ewmixjnxcv .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #ewmixjnxcv .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #ewmixjnxcv .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #ewmixjnxcv .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ewmixjnxcv .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ewmixjnxcv .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #ewmixjnxcv .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ewmixjnxcv .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #ewmixjnxcv .gt_left { text-align: left; } #ewmixjnxcv .gt_center { text-align: center; } #ewmixjnxcv .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #ewmixjnxcv .gt_font_normal { font-weight: normal; } #ewmixjnxcv .gt_font_bold { font-weight: bold; } #ewmixjnxcv .gt_font_italic { font-style: italic; } #ewmixjnxcv .gt_super { font-size: 65%; } #ewmixjnxcv .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #ewmixjnxcv .gt_asterisk { font-size: 100%; vertical-align: 0; } #ewmixjnxcv .gt_indent_1 { text-indent: 5px; } #ewmixjnxcv .gt_indent_2 { text-indent: 10px; } #ewmixjnxcv .gt_indent_3 { text-indent: 15px; } #ewmixjnxcv .gt_indent_4 { text-indent: 20px; } #ewmixjnxcv .gt_indent_5 { text-indent: 25px; } 変数 2000 2005 2010 母親就業率 平均 0.392 0.430 0.471 標準偏差 0.096 0.091 0.090 保育所定員率 平均 0.320 0.361 0.407 標準偏差 0.102 0.110 0.119 "],["ch7.html", "第7章 操作変数法", " 第7章 操作変数法 先に出版社サイトよりデータをダウンロードする. # サポートファイルへのリンク curl &lt;- &quot;https://www.yuhikaku.co.jp/static_files/05385_support07.zip&quot; # ダウンロード保存用フォルダが存在しない場合, 作成 if(!dir.exists(&quot;downloads&quot;)){ dir.create(&quot;downloads&quot;) } cdestfile &lt;- &quot;downloads/support07.zip&quot; download.file(curl, cdestfile) # データ保存用フォルダが存在しない場合, 作成 if(!dir.exists(&quot;data&quot;)){ dir.create(&quot;data&quot;) } # WSL上のRで解凍すると文字化けするので、Linuxのコマンドを外部呼び出し # Windowsの場合は別途コマンドを用いる. if(.Platform$OS.type == &quot;unix&quot;) { system(sprintf(&#39;unzip -n -Ocp932 %s -d %s&#39;, &quot;downloads/support07.zip&quot;, &quot;./data&quot;)) } else { print(&quot;Windowsで解凍するコマンドを別途追加せよ.&quot;) } "],["ch8.html", "第8章 制限従属変数モデル", " 第8章 制限従属変数モデル 先に出版社サイトよりデータをダウンロードする. # サポートファイルへのリンク curl &lt;- &quot;https://www.yuhikaku.co.jp/static_files/05385_support08.zip&quot; # ダウンロード保存用フォルダが存在しない場合, 作成 if(!dir.exists(&quot;downloads&quot;)){ dir.create(&quot;downloads&quot;) } cdestfile &lt;- &quot;downloads/support08.zip&quot; download.file(curl, cdestfile) # データ保存用フォルダが存在しない場合, 作成 if(!dir.exists(&quot;data&quot;)){ dir.create(&quot;data&quot;) } # WSL上のRで解凍すると文字化けするので、Linuxのコマンドを外部呼び出し # Windowsの場合は別途コマンドを用いる. if(.Platform$OS.type == &quot;unix&quot;) { system(sprintf(&#39;unzip -n -Ocp932 %s -d %s&#39;, &quot;downloads/support08.zip&quot;, &quot;./data&quot;)) } else { print(&quot;Windowsで解凍するコマンドを別途追加せよ.&quot;) } "],["ch9.html", "第9章 政策評価モデル", " 第9章 政策評価モデル 先に出版社サイトよりデータをダウンロードする. # サポートファイルへのリンク curl &lt;- &quot;https://www.yuhikaku.co.jp/static_files/05385_support09.zip&quot; # ダウンロード保存用フォルダが存在しない場合, 作成 if(!dir.exists(&quot;downloads&quot;)){ dir.create(&quot;downloads&quot;) } cdestfile &lt;- &quot;downloads/support09.zip&quot; download.file(curl, cdestfile) # データ保存用フォルダが存在しない場合, 作成 if(!dir.exists(&quot;data&quot;)){ dir.create(&quot;data&quot;) } # WSL上のRで解凍すると文字化けするので、Linuxのコマンドを外部呼び出し # Windowsの場合は別途コマンドを用いる. if(.Platform$OS.type == &quot;unix&quot;) { system(sprintf(&#39;unzip -n -Ocp932 %s -d %s&#39;, &quot;downloads/support09.zip&quot;, &quot;./data&quot;)) } else { print(&quot;Windowsで解凍するコマンドを別途追加せよ.&quot;) } "],["ch10.html", "第10章 系列相関と時系列モデル", " 第10章 系列相関と時系列モデル 先に出版社サイトよりデータをダウンロードする. # サポートファイルへのリンク curl &lt;- &quot;https://www.yuhikaku.co.jp/static_files/05385_support10.zip&quot; # ダウンロード保存用フォルダが存在しない場合, 作成 if(!dir.exists(&quot;downloads&quot;)){ dir.create(&quot;downloads&quot;) } cdestfile &lt;- &quot;downloads/support10.zip&quot; download.file(curl, cdestfile) # データ保存用フォルダが存在しない場合, 作成 if(!dir.exists(&quot;data&quot;)){ dir.create(&quot;data&quot;) } # WSL上のRで解凍すると文字化けするので、Linuxのコマンドを外部呼び出し # Windowsの場合は別途コマンドを用いる. if(.Platform$OS.type == &quot;unix&quot;) { system(sprintf(&#39;unzip -n -Ocp932 %s -d %s&#39;, &quot;downloads/support10.zip&quot;, &quot;./data&quot;)) } else { print(&quot;Windowsで解凍するコマンドを別途追加せよ.&quot;) } "],["ch11.html", "第11章 トレンドと構造変化", " 第11章 トレンドと構造変化 先に出版社サイトよりデータをダウンロードする. # サポートファイルへのリンク curl &lt;- &quot;https://www.yuhikaku.co.jp/static_files/05385_support11.zip&quot; # ダウンロード保存用フォルダが存在しない場合, 作成 if(!dir.exists(&quot;downloads&quot;)){ dir.create(&quot;downloads&quot;) } cdestfile &lt;- &quot;downloads/support11.zip&quot; download.file(curl, cdestfile) # データ保存用フォルダが存在しない場合, 作成 if(!dir.exists(&quot;data&quot;)){ dir.create(&quot;data&quot;) } # WSL上のRで解凍すると文字化けするので、Linuxのコマンドを外部呼び出し # Windowsの場合は別途コマンドを用いる. if(.Platform$OS.type == &quot;unix&quot;) { system(sprintf(&#39;unzip -n -Ocp932 %s -d %s&#39;, &quot;downloads/support11.zip&quot;, &quot;./data&quot;)) } else { print(&quot;Windowsで解凍するコマンドを別途追加せよ.&quot;) } "],["ch12.html", "第12章 VARモデル", " 第12章 VARモデル 先に出版社サイトよりデータをダウンロードする. # サポートファイルへのリンク curl &lt;- &quot;https://www.yuhikaku.co.jp/static_files/05385_support12.zip&quot; # ダウンロード保存用フォルダが存在しない場合, 作成 if(!dir.exists(&quot;downloads&quot;)){ dir.create(&quot;downloads&quot;) } cdestfile &lt;- &quot;downloads/support12.zip&quot; download.file(curl, cdestfile) # データ保存用フォルダが存在しない場合, 作成 if(!dir.exists(&quot;data&quot;)){ dir.create(&quot;data&quot;) } # WSL上のRで解凍すると文字化けするので、Linuxのコマンドを外部呼び出し # Windowsの場合は別途コマンドを用いる. if(.Platform$OS.type == &quot;unix&quot;) { system(sprintf(&#39;unzip -n -Ocp932 %s -d %s&#39;, &quot;downloads/support12.zip&quot;, &quot;./data&quot;)) } else { print(&quot;Windowsで解凍するコマンドを別途追加せよ.&quot;) } "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
